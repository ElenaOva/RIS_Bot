import random
import requests
import json
# import sqlite3
import psycopg2
import urllib.parse
import telebot
from telebot import types
import os
from flask import Flask, request


TOKEN = os.getenv("BOT_TOKEN")
bot = telebot.TeleBot(TOKEN)
print("BOT_TOKEN:", TOKEN)

DATABASE_URL = os.getenv("DATABASE_URL")
print("DATABASE_URL:", DATABASE_URL)


WEBHOOK_PATH = f"/{TOKEN}"
print("WEBHOOK_PATH:", WEBHOOK_PATH)
WEBHOOK_URL = f"https://risbot-production.up.railway.app{WEBHOOK_PATH}"
print("WEBHOOK_PATH:", WEBHOOK_PATH)

app = Flask(__name__)
print('app = Flask(__name__)')


@app.route(WEBHOOK_PATH, methods=['POST'])
def webhook():
    json_str = request.get_data().decode('utf-8')
    update = telebot.types.Update.de_json(json_str)
    bot.process_new_updates([update])
    print('in @app.route')
    return '', 200


class ConvertionException(Exception):
    pass


class MyCustomException(Exception):
    pass


def get_admins():
    conn = psycopg2.connect(DATABASE_URL)
    cursor = conn.cursor()
    cursor.execute(
        'SELECT administrators.name FROM administrators')
    result = cursor.fetchall()
    conn.close()
    admins = [admin[0] for admin in result]
    return admins


def get_example_meme():
    conn = psycopg2.connect(DATABASE_URL)
    cursor = conn.cursor()
    cursor.execute(
        'SELECT photo FROM example_meme')
    result = cursor.fetchall()
    conn.close()
    actual_meme = result[0][0]
    return actual_meme


def get_announcements(argument):
    conn = psycopg2.connect(DATABASE_URL)
    cursor = conn.cursor()
    cursor.execute(
        'SELECT game_announcement.name, game_announcement.announcement FROM game_announcement WHERE status IS NULL')
    announcements = cursor.fetchall()
    conn.close()

    if argument is None:
        if len(announcements) == 0:
            return '–ù–æ–≤—ã—Ö –∞–Ω–æ–Ω—Å–æ–≤ –æ—Ç –∏–≥—Ä–æ–∫–æ–≤ –Ω–µ—Ç üòå'
        else:
            result = []
            for text in announcements:
                master = text[0]
                text_announcement = text[1]
                new_text = f'–ú–∞—Å—Ç–µ—Ä: @{master}\n{text_announcement}'
                result.append(new_text)

            conn = psycopg2.connect(DATABASE_URL)
            cursor = conn.cursor()
            cursor.execute(
                'UPDATE game_announcement SET status=%s WHERE status IS NULL',
                (True, ))
            conn.commit()
            conn.close()
            return result

    elif argument is True:
        if len(announcements) == 0:
            return '–ê–Ω–æ–Ω—Å–æ–≤ –æ—Ç –∏–≥—Ä–æ–∫–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç üòå'
        else:
            result = []
            for text in announcements:
                master = text[0]
                text_announcement = text[1]
                new_text = f'–ú–∞—Å—Ç–µ—Ä: @{master}\n{text_announcement}'
                result.append(new_text)
            return result


def get_stories(argument):
    conn = psycopg2.connect(DATABASE_URL)
    cursor = conn.cursor()
    cursor.execute(
        'SELECT history.author, history.text FROM history WHERE status IS NULL')
    stories = cursor.fetchall()
    conn.close()

    if argument is None:
        if len(stories) == 0:
            return '–ù–æ–≤—ã—Ö –∏—Å—Ç–æ—Ä–∏–π –æ—Ç –∏–≥—Ä–æ–∫–æ–≤ –Ω–µ—Ç üòå'
        else:
            result = []
            for text in stories:
                author = text[0]
                text_story = text[1]
                if author != '–∞–≤—Ç–æ—Ä –ø–æ–∂–µ–ª–∞–ª –æ—Å—Ç–∞—Ç—å—Å—è –∞–Ω–æ–Ω–∏–º–Ω—ã–º üòå':
                    new_text = f'–ê–≤—Ç–æ—Ä: @{author}\n{text_story}'
                    result.append(new_text)
                else:
                    new_text = f'–ê–≤—Ç–æ—Ä: {author}\n{text_story}'
                    result.append(new_text)
            conn = psycopg2.connect(DATABASE_URL)
            cursor = conn.cursor()
            cursor.execute(
                'UPDATE history SET status=%s WHERE status IS NULL',
                (True, ))
            conn.commit()
            conn.close()
            return result

    elif argument is True:
        if len(stories) == 0:
            return '–ò—Å—Ç–æ—Ä–∏–π –æ—Ç –∏–≥—Ä–æ–∫–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç üòå'
        else:
            result = []
            for text in stories:
                author = text[0]
                text_story = text[1]
                if author != '–∞–≤—Ç–æ—Ä –ø–æ–∂–µ–ª–∞–ª –æ—Å—Ç–∞—Ç—å—Å—è –∞–Ω–æ–Ω–∏–º–Ω—ã–º üòå':
                    new_text = f'–ê–≤—Ç–æ—Ä: @{author}\n{text_story}'
                    result.append(new_text)
                else:
                    new_text = f'–ê–≤—Ç–æ—Ä: {author}\n{text_story}'
                    result.append(new_text)
            return result


def get_ideas(argument):
    conn = psycopg2.connect(DATABASE_URL)
    cursor = conn.cursor()
    cursor.execute(
        'SELECT ideas.author, ideas.idea FROM ideas WHERE status IS NULL')
    ideas = cursor.fetchall()
    conn.close()

    if argument is None:
        if len(ideas) == 0:
            return '–ù–æ–≤—ã—Ö –∏–¥–µ–π –æ—Ç –∏–≥—Ä–æ–∫–æ–≤ –Ω–µ—Ç üòå'
        else:
            result = []
            for elem in ideas:
                author = elem[0]
                text_idea = elem[1]
                if author != '–∞–≤—Ç–æ—Ä –ø–æ–∂–µ–ª–∞–ª –æ—Å—Ç–∞—Ç—å—Å—è –∞–Ω–æ–Ω–∏–º–Ω—ã–º üòå':
                    new_text = f'–ê–≤—Ç–æ—Ä: @{author}\n{text_idea}'
                    result.append(new_text)
                else:
                    new_text = f'–ê–≤—Ç–æ—Ä: {author}\n{text_idea}'
                    result.append(new_text)
            conn = psycopg2.connect(DATABASE_URL)
            cursor = conn.cursor()
            cursor.execute(
                'UPDATE ideas SET status=%s WHERE status IS NULL',
                (True, ))
            conn.commit()
            conn.close()
            return result

    elif argument is True:
        if len(ideas) == 0:
            return '–ò–¥–µ–π –æ—Ç –∏–≥—Ä–æ–∫–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç üòå'
        else:
            result = []
            for elem in ideas:
                author = elem[0]
                text_idea = elem[1]
                if author != '–∞–≤—Ç–æ—Ä –ø–æ–∂–µ–ª–∞–ª –æ—Å—Ç–∞—Ç—å—Å—è –∞–Ω–æ–Ω–∏–º–Ω—ã–º üòå':
                    new_text = f'–ê–≤—Ç–æ—Ä: @{author}\n{text_idea}'
                    result.append(new_text)
                else:
                    new_text = f'–ê–≤—Ç–æ—Ä: {author}\n{text_idea}'
                    result.append(new_text)
            return result


def get_memes(argument):
    conn = psycopg2.connect(DATABASE_URL)
    cursor = conn.cursor()
    cursor.execute(
        'SELECT memes.author, memes.meme FROM memes WHERE status IS NULL')
    memes = cursor.fetchall()
    print(f'memes = {memes}')
    conn.close()

    if argument is None:
        if len(memes) == 0:
            return '–ù–æ–≤—ã—Ö –º–µ–º–æ–≤ –æ—Ç –∏–≥—Ä–æ–∫–æ–≤ –Ω–µ—Ç üòå'
        else:
            result = []
            for elem in memes:
                new_list = []
                author = elem[0]
                photo = elem[1]
                if author != '–∞–≤—Ç–æ—Ä –ø–æ–∂–µ–ª–∞–ª –æ—Å—Ç–∞—Ç—å—Å—è –∞–Ω–æ–Ω–∏–º–Ω—ã–º üòå':
                    new_text = f'–ê–≤—Ç–æ—Ä: @{author}'
                    new_list.append(new_text)
                    new_list.append(photo)
                    result.append(new_list)
                else:
                    new_text = f'–ê–≤—Ç–æ—Ä: {author}'
                    new_list.append(new_text)
                    new_list.append(photo)
                    result.append(new_list)
            conn = psycopg2.connect(DATABASE_URL)
            cursor = conn.cursor()
            cursor.execute(
                'UPDATE memes SET status=%s WHERE status IS NULL',
                (True, ))
            conn.commit()
            conn.close()
            return result

    elif argument is True:
        if len(memes) == 0:
            return '–ú–µ–º–æ–≤ –æ—Ç –∏–≥—Ä–æ–∫–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç üòå'
        else:
            result = []
            for elem in memes:
                new_list = []
                author = elem[0]
                photo = elem[1]
                if author != '–∞–≤—Ç–æ—Ä –ø–æ–∂–µ–ª–∞–ª –æ—Å—Ç–∞—Ç—å—Å—è –∞–Ω–æ–Ω–∏–º–Ω—ã–º üòå':
                    new_text = f'–ê–≤—Ç–æ—Ä: @{author}'
                    new_list.append(new_text)
                    new_list.append(photo)
                    result.append(new_list)
                else:
                    new_text = f'–ê–≤—Ç–æ—Ä: {author}'
                    new_list.append(new_text)
                    new_list.append(photo)
                    result.append(new_list)
            return result


def add_announcement(data, name):
    conn = psycopg2.connect(DATABASE_URL)
    cursor = conn.cursor()
    cursor.execute(
        f'INSERT INTO game_announcement (announcement, name) VALUES (%s, %s)', (data, name, ))
    conn.commit()
    conn.close()


def delete_announcement():
    conn = psycopg2.connect(DATABASE_URL)
    cursor = conn.cursor()
    cursor.execute('SELECT id FROM game_announcement')
    list_id = cursor.fetchall()
    conn.close()

    if len(list_id) != 0:
        list_id = [elem[0] for elem in list_id]
        list_id.sort()
        actual_id = list_id[-1]

        conn = psycopg2.connect(DATABASE_URL)
        cursor = conn.cursor()
        cursor.execute(
            'DELETE FROM game_announcement WHERE id=%s', (actual_id, ))
        conn.commit()
        conn.close()


def add_history(data, name, status):
    if status == 'anonymous':
        conn = psycopg2.connect(DATABASE_URL)
        cursor = conn.cursor()
        cursor.execute('INSERT INTO history (text, author) VALUES (%s, %s)',
                       (data, "–∞–≤—Ç–æ—Ä –ø–æ–∂–µ–ª–∞–ª –æ—Å—Ç–∞—Ç—å—Å—è –∞–Ω–æ–Ω–∏–º–Ω—ã–º üòå"))
        conn.commit()
        conn.close()
    else:
        conn = psycopg2.connect(DATABASE_URL)
        cursor = conn.cursor()
        cursor.execute('INSERT INTO history (text, author) VALUES (%s, %s)', (data, name, ))
        conn.commit()
        conn.close()


def delete_history():
    conn = psycopg2.connect(DATABASE_URL)
    cursor = conn.cursor()
    cursor.execute('SELECT id FROM history')
    list_id = cursor.fetchall()
    conn.close()

    if len(list_id) != 0:
        list_id = [elem[0] for elem in list_id]
        list_id.sort()
        actual_id = list_id[-1]

        conn = psycopg2.connect(DATABASE_URL)
        cursor = conn.cursor()
        cursor.execute(
            'DELETE FROM history WHERE id=%s ', (actual_id, ))
        conn.commit()
        conn.close()


def add_idea(data, name, status):
    if status == 'anonymous':
        conn = psycopg2.connect(DATABASE_URL)
        cursor = conn.cursor()
        cursor.execute('INSERT INTO ideas (idea, author) VALUES (%s, %s)',
                       (data, "–∞–≤—Ç–æ—Ä –ø–æ–∂–µ–ª–∞–ª –æ—Å—Ç–∞—Ç—å—Å—è –∞–Ω–æ–Ω–∏–º–Ω—ã–º üòå"))
        conn.commit()
        conn.close()
    else:
        conn = psycopg2.connect(DATABASE_URL)
        cursor = conn.cursor()
        cursor.execute('INSERT INTO ideas (idea, author) VALUES (%s, %s)', (data, name))
        conn.commit()
        conn.close()


def delete_idea():
    conn = psycopg2.connect(DATABASE_URL)
    cursor = conn.cursor()
    cursor.execute('SELECT id FROM ideas')
    list_id = cursor.fetchall()
    conn.close()

    if len(list_id) != 0:
        list_id = [elem[0] for elem in list_id]
        list_id.sort()
        actual_id = list_id[-1]

        conn = psycopg2.connect(DATABASE_URL)
        cursor = conn.cursor()
        cursor.execute(
            'DELETE FROM ideas WHERE id=%s', (actual_id, ))
        conn.commit()
        conn.close()


def add_meme(data, author):
    conn = psycopg2.connect(DATABASE_URL)
    cursor = conn.cursor()
    cursor.execute('INSERT INTO memes (meme, author) VALUES (%s, %s)', (data, author))
    conn.commit()
    conn.close()


def delete_all_messages():
    conn = psycopg2.connect(DATABASE_URL)
    cursor = conn.cursor()
    cursor.execute('DELETE FROM game_announcement WHERE status=1')
    conn.commit()
    conn.close()

    conn = psycopg2.connect(DATABASE_URL)
    cursor = conn.cursor()
    cursor.execute('DELETE FROM history WHERE status=1')
    conn.commit()
    conn.close()

    conn = psycopg2.connect(DATABASE_URL)
    cursor = conn.cursor()
    cursor.execute('DELETE FROM ideas WHERE status=1')
    conn.commit()
    conn.close()

    conn = psycopg2.connect(DATABASE_URL)
    cursor = conn.cursor()
    cursor.execute('DELETE FROM memes WHERE status=1')
    conn.commit()
    conn.close()


def delete_some_messages(argument):
    conn = psycopg2.connect(DATABASE_URL)
    cursor = conn.cursor()
    cursor.execute('SELECT id FROM %s', (argument, ))
    list_id = cursor.fetchall()
    conn.close()

    if len(list_id) != 0:
        conn = psycopg2.connect(DATABASE_URL)
        cursor = conn.cursor()
        cursor.execute('DELETE FROM %s WHERE status=1', (argument, ))
        conn.commit()
        conn.close()


@bot.message_handler(commands=['start', ])
def start(message: telebot.types.Message):
    print('–ü–†–ò–®–õ–ò –í –°–¢–ê–†–¢')
    if message.chat.type == 'private':
        username = message.from_user.username
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        if message.text == '/help_me':
            help_me(message)
        else:
            admins = get_admins()
            if username in admins:
                markup.add(types.KeyboardButton('–ù–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è'),
                           types.KeyboardButton('–ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è'))
                bot.send_message(message.chat.id, text="–ü—Ä–∏–≤–µ—Ç, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {0.first_name}!\n–†–µ—à–∏, —á—Ç–æ —Ö–æ—á–µ—à—å"
                                                       " —Å–¥–µ–ª–∞—Ç—å :)".format(message.from_user), reply_markup=markup)
                bot.register_next_step_handler(message, admin_actions)
            else:
                markup.add(types.KeyboardButton('–ü—Ä–∏—Å–ª–∞—Ç—å –Ω–æ–≤–æ—Å—Ç—å üìù'),
                           types.KeyboardButton('–ü—Ä–∏—Å–ª–∞—Ç—å –º–µ–º ü¶Ñ'))
                bot.send_message(message.chat.id, text="–ü—Ä–∏–≤–µ—Ç, {0.first_name}!\n–†–µ—à–∏, —á—Ç–æ —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å :)"
                                 .format(message.from_user), reply_markup=markup)
                bot.register_next_step_handler(message, user_actions)


@bot.message_handler(commands=['help_me', ])
def help_me(message):
    if message.chat.type == 'private':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        markup.add(types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ —Å–∞–º–æ–µ –Ω–∞—á–∞–ª–æ'))
        bot.send_message(message.chat.id, text='–ü—Ä–∏–≤–µ—Ç, {0.first_name}!\n–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è :)\n–≠—Ç–æ—Ç –±–æ—Ç '
                                               '—Å–ª—É–∂–∏—Ç –ø–æ–º–æ—â–Ω–∏–∫–æ–º –¥–ª—è –∞–¥–º–∏–Ω–æ–≤ —Ç–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª–∞ "–†–ò–° (–†–æ–ª–µ–≤—ã–µ '
                                               '–ò–≥—Ä—ã –≤ –°–µ—Ä–±–∏–∏)".\n–¢—ã –º–æ–∂–µ—à—å –ø—Ä–∏—Å–ª–∞—Ç—å –±–æ—Ç—É —Å–≤–æ–π —Ä–æ–ª–µ–≤–æ–π –º–µ–º, –∞–Ω–æ–Ω—Å '
                                               '—Å–≤–æ–µ–π –∏–≥—Ä—ã –∏–ª–∏ —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å —Å–≤–æ—é –∏—Å—Ç–æ—Ä–∏—é —Å —Ä–æ–ª–µ–≤—ã—Ö –∏–≥—Ä. –ê–¥–º–∏–Ω—ã '
                                               '–∫–∞–Ω–∞–ª–∞ –≤—Å—ë –ø–æ—Å–º–æ—Ç—Ä—è—Ç –∏ —Ä–µ—à–∞—Ç, —á—Ç–æ —Å —ç—Ç–∏–º –¥–µ–ª–∞—Ç—å :)\n'
                                               '–ü—Ä–æ—Å—Ç–æ –∏–¥–∏ –ø–æ –∫–Ω–æ–ø–∫–∞–º, –∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–±–µ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –±–æ—Ç –∏ –Ω–∏ –æ —á—ë–º –Ω–µ '
                                               '–ø–µ—Ä–µ–∂–∏–≤–∞–π üòå'.format(message.from_user),
                         reply_markup=markup)
        bot.register_next_step_handler(message, start)


@bot.message_handler(content_types=['text', 'photo'])
def handle_error(message):
    bot.send_message(message.chat.id,
                     text='*–°–õ–ò–®–ö–û–ú –ú–ù–û–ì–û –ë–£–ö–í üò≥üò≥üò≥\n–í–û–ó–ú–û–ñ–ù–û, –¢–´ –í–í–ï–õ –ë–û–õ–¨–®–û–ô –¢–ï–ö–°–¢ –ò –¢–ï–õ–ï–ì–†–ê–ú–ú –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò'
                          ' –†–ê–ó–î–ï–õ–ò–õ –ï–ì–û –ù–ê –ù–ï–°–ö–û–õ–¨–ö–û –ß–ê–°–¢–ï–ô, –¢–ê–ö –ö–ê–ö –£ –¢–ï–õ–ï–ì–†–ê–ú–ú–ê –ï–°–¢–¨ –°–í–û–ò –û–ì–†–ê–ù–ò–ß–ï–ù–ò–Ø –ü–û'
                          ' –ö–û–õ–ò–ß–ï–°–¢–í–£ –°–ò–ú–í–û–õ–û–í –í –ü–û–°–¢–ï.\n–í–ï–†–ù–ò–°–¨ –í –°–ê–ú–û–ï –ù–ê–ß–ê–õ–û –ü–†–ò –ü–û–ú–û–©–ò –ö–û–ú–ê–ù–î–´ "start" –í –°–ò–ù–ï–ô'
                          ' –ü–õ–ê–®–ö–ï –ú–ï–ù–Æ, –ó–ê–ü–û–õ–ù–ò –í–°–Å –ó–ê–ù–û–í–û –° –£–ß–Å–¢–û–ú –°–û–ö–†–ê–©–Å–ù–ù–û–ì–û –¢–ï–ö–°–¢–ê :)\n–í –ü–†–û–¢–ò–í–ù–û–ú –°–õ–£–ß–ê–ï –ê–î–ú–ò–ù'
                          ' –ü–û–õ–£–ß–ò–¢ –õ–ò–®–¨ –ß–ê–°–¢–¨ –¢–í–û–ï–ì–û –¢–ï–ö–°–¢–ê üòï*'
                     .format(message.from_user), parse_mode='Markdown')
    # bot.register_next_step_handler(message, start)


def admin_actions(message):
    if message.chat.type == 'private':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        if type(message.text) is str:
            if message.text == '/start':
                start(message)
            elif message.text == '/help_me':
                help_me(message)
            elif message.text == '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
                markup.add(types.KeyboardButton('–ù–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è'),
                           types.KeyboardButton('–ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è'))
                bot.send_message(message.chat.id, text='–†–µ—à–∏, —á—Ç–æ –±—É–¥–µ—à—å –¥–µ–ª–∞—Ç—å :)', reply_markup=markup)
                bot.register_next_step_handler(message, admin_actions)
            elif message.text == '–ù–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è':
                markup.add(types.KeyboardButton('–ê–Ω–æ–Ω—Å—ã –∏–≥—Ä'), types.KeyboardButton('–†–æ–ª–µ–≤—ã–µ –∏—Å—Ç–æ—Ä–∏–∏'),
                           types.KeyboardButton('–ò–¥–µ–∏ –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è —Å–æ–æ–±—â–µ—Å—Ç–≤–∞'),
                           types.KeyboardButton('–†–æ–ª–µ–≤—ã–µ –º–µ–º—ã'),
                           types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
                bot.send_message(message.chat.id, text='–†–µ—à–∏, —á—Ç–æ —Ö–æ—á–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏ –Ω–∞–∂–º–∏ –Ω–∞ —ç—Ç—É –∫–Ω–æ–ø–∫—É :)',
                                 reply_markup=markup)
                bot.register_next_step_handler(message, view_messages, None)
            elif message.text == '–ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è':
                markup.add(types.KeyboardButton('–ê–Ω–æ–Ω—Å—ã –∏–≥—Ä'), types.KeyboardButton('–†–æ–ª–µ–≤—ã–µ –∏—Å—Ç–æ—Ä–∏–∏'),
                           types.KeyboardButton('–ò–¥–µ–∏ –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è —Å–æ–æ–±—â–µ—Å—Ç–≤–∞'),
                           types.KeyboardButton('–†–æ–ª–µ–≤—ã–µ –º–µ–º—ã'),
                           types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'),
                           types.KeyboardButton('–£–¥–∞–ª–∏—Ç—å –≤—Å–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è'))
                bot.send_message(message.chat.id, text='–†–µ—à–∏, —á—Ç–æ —Ö–æ—á–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏ –Ω–∞–∂–º–∏ –Ω–∞ —ç—Ç—É –∫–Ω–æ–ø–∫—É :)',
                                 reply_markup=markup)
                bot.register_next_step_handler(message, view_messages, True)
            else:
                markup.add(types.KeyboardButton('–ù–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è'), types.KeyboardButton('–ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è'))
                bot.send_message(message.chat.id,
                                 text='{0.first_name}, —Ç—ã —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ –Ω–∞–∂–∏–º–∞–µ—à—åüòå\n–í—ã–±–µ—Ä–∏ –æ–¥–∏–Ω –∏–∑ '
                                      '–≤–∞—Ä–∏–∞–Ω—Ç–æ–≤, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –Ω–∏–∂–µ :)'.format(message.from_user),
                                 reply_markup=markup)
                bot.register_next_step_handler(message, admin_actions)
        else:
            markup.add(types.KeyboardButton('–ù–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è'), types.KeyboardButton('–ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è'))
            bot.send_message(message.chat.id,
                             text='{0.first_name}, —Ç—ã —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ –Ω–∞–∂–∏–º–∞–µ—à—å –∏–ª–∏ —à–ª–µ—à—å –Ω–∞–º –∫–∞—Ä—Ç–∏–Ω–∫–∏ üòå\n–í—ã–±–µ—Ä–∏ –æ–¥–∏–Ω '
                                  '–∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –Ω–∏–∂–µ :)'.format(message.from_user),
                             reply_markup=markup)
            bot.register_next_step_handler(message, admin_actions)


def view_messages(message, argument):
    if message.chat.type == 'private':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        if type(message.text) is str:
            if message.text == '/start':
                start(message)
            elif message.text == '/help_me':
                help_me(message)
            elif message.text == '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
                markup.add(types.KeyboardButton('–ù–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è'),
                           types.KeyboardButton('–ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è'))
                bot.send_message(message.chat.id, text='–†–µ—à–∏, —á—Ç–æ –±—É–¥–µ—à—å –¥–µ–ª–∞—Ç—å :)', reply_markup=markup)
                bot.register_next_step_handler(message, admin_actions)
            elif message.text == '–£–¥–∞–ª–∏—Ç—å –≤—Å–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è':
                markup.add(types.KeyboardButton('–î–∞!'),
                           types.KeyboardButton('–ù–µ—Ç—å ‚ò∫Ô∏è'))
                bot.send_message(message.chat.id, text='–¢—ã –ø—Ä–∞–≤–¥–∞ —Ö–æ—á–µ—à—å —É–¥–∞–ª–∏—Ç—å –≤—Å–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è?',
                                 reply_markup=markup)
                bot.register_next_step_handler(message, delete_messages)
            elif argument is True:
                if message.text == '–ê–Ω–æ–Ω—Å—ã –∏–≥—Ä':
                    announcements = get_announcements(argument)
                    if type(announcements) is str:
                        markup.add(types.KeyboardButton('–ù–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è'),
                                   types.KeyboardButton('–ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è'))
                        bot.send_message(message.chat.id, text=announcements)
                        bot.send_message(message.chat.id, text='–†–µ—à–∏, —á—Ç–æ –±—É–¥–µ—à—å –¥–µ–ª–∞—Ç—å :)', reply_markup=markup)
                        bot.register_next_step_handler(message, admin_actions)
                    else:
                        markup.add(types.KeyboardButton('–£–¥–∞–ª–∏—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ –∞–Ω–æ–Ω—Å—ã'),
                                   types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
                        for i in range(len(announcements)):
                            if i == len(announcements) - 1:
                                bot.send_message(message.chat.id, text=announcements[i], reply_markup=markup)
                                bot.register_next_step_handler(message, delete_or_not)
                            else:
                                bot.send_message(message.chat.id, text=announcements[i])
                elif message.text == '–†–æ–ª–µ–≤—ã–µ –∏—Å—Ç–æ—Ä–∏–∏':
                    stories = get_stories(argument)
                    if type(stories) is str:
                        markup.add(types.KeyboardButton('–ù–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è'),
                                   types.KeyboardButton('–ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è'))
                        bot.send_message(message.chat.id, text=stories)
                        bot.send_message(message.chat.id, text='–†–µ—à–∏, —á—Ç–æ –±—É–¥–µ—à—å –¥–µ–ª–∞—Ç—å :)', reply_markup=markup)
                        bot.register_next_step_handler(message, admin_actions)
                    else:
                        markup.add(types.KeyboardButton('–£–¥–∞–ª–∏—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ —Ä–æ–ª–µ–≤—ã–µ –∏—Å—Ç–æ—Ä–∏–∏'),
                                   types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
                        for i in range(len(stories)):
                            if i == len(stories) - 1:
                                bot.send_message(message.chat.id, text=stories[i], reply_markup=markup)
                                bot.register_next_step_handler(message, delete_or_not)
                            else:
                                bot.send_message(message.chat.id, text=stories[i])
                elif message.text == '–ò–¥–µ–∏ –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è —Å–æ–æ–±—â–µ—Å—Ç–≤–∞':
                    ideas = get_ideas(argument)
                    if type(ideas) is str:
                        markup.add(types.KeyboardButton('–ù–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è'),
                                   types.KeyboardButton('–ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è'))
                        bot.send_message(message.chat.id, text=ideas)
                        bot.send_message(message.chat.id, text='–†–µ—à–∏, —á—Ç–æ –±—É–¥–µ—à—å –¥–µ–ª–∞—Ç—å :)', reply_markup=markup)
                        bot.register_next_step_handler(message, admin_actions)
                    else:
                        markup.add(types.KeyboardButton('–£–¥–∞–ª–∏—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ –∏–¥–µ–∏'),
                                   types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
                        for i in range(len(ideas)):
                            if i == len(ideas) - 1:
                                bot.send_message(message.chat.id, text=ideas[i], reply_markup=markup)
                                bot.register_next_step_handler(message, delete_or_not)
                            else:
                                bot.send_message(message.chat.id, text=ideas[i])
                elif message.text == '–†–æ–ª–µ–≤—ã–µ –º–µ–º—ã':
                    memes = get_memes(argument)
                    if type(memes) is str:
                        markup.add(types.KeyboardButton('–ù–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è'),
                                   types.KeyboardButton('–ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è'))
                        bot.send_message(message.chat.id, text=memes)
                        bot.send_message(message.chat.id, text='–†–µ—à–∏, —á—Ç–æ –±—É–¥–µ—à—å –¥–µ–ª–∞—Ç—å :)', reply_markup=markup)
                        bot.register_next_step_handler(message, admin_actions)
                    else:
                        markup.add(types.KeyboardButton('–£–¥–∞–ª–∏—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ –º–µ–º—ã'),
                                   types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
                        for i in range(len(memes)):
                            text = memes[i][0]
                            photo = memes[i][1]
                            if i == len(memes) - 1:
                                bot.send_photo(message.chat.id, photo, text, reply_markup=markup)
                                bot.register_next_step_handler(message, delete_or_not)
                            else:
                                bot.send_photo(message.chat.id, photo, text)
                else:
                    markup.add(types.KeyboardButton('–ê–Ω–æ–Ω—Å—ã –∏–≥—Ä'), types.KeyboardButton('–†–æ–ª–µ–≤—ã–µ –∏—Å—Ç–æ—Ä–∏–∏'),
                               types.KeyboardButton('–ò–¥–µ–∏ –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è —Å–æ–æ–±—â–µ—Å—Ç–≤–∞'),
                               types.KeyboardButton('–†–æ–ª–µ–≤—ã–µ –º–µ–º—ã'),
                               types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
                    bot.send_message(message.chat.id,
                                     text='{0.first_name}, —Ç—ã —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ –Ω–∞–∂–∏–º–∞–µ—à—åüòå\n–í—ã–±–µ—Ä–∏ –æ–¥–∏–Ω –∏–∑ '
                                          '–≤–∞—Ä–∏–∞–Ω—Ç–æ–≤, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –Ω–∏–∂–µ :)'.format(message.from_user),
                                     reply_markup=markup)
                    bot.register_next_step_handler(message, view_messages, True)
            elif argument is None:
                if message.text == '–ê–Ω–æ–Ω—Å—ã –∏–≥—Ä':
                    announcements = get_announcements(argument)
                    if type(announcements) is str:
                        markup.add(types.KeyboardButton('–ù–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è'),
                                   types.KeyboardButton('–ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è'))
                        bot.send_message(message.chat.id, text=announcements)
                        bot.send_message(message.chat.id, text='–†–µ—à–∏, —á—Ç–æ –±—É–¥–µ—à—å –¥–µ–ª–∞—Ç—å :)', reply_markup=markup)
                        bot.register_next_step_handler(message, admin_actions)
                    else:
                        markup.add(types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
                        for i in range(len(announcements)):
                            if i == len(announcements) - 1:
                                bot.send_message(message.chat.id, text=announcements[i], reply_markup=markup)
                                bot.register_next_step_handler(message, admin_actions)
                            else:
                                bot.send_message(message.chat.id, text=announcements[i])
                elif message.text == '–†–æ–ª–µ–≤—ã–µ –∏—Å—Ç–æ—Ä–∏–∏':
                    stories = get_stories(argument)
                    if type(stories) is str:
                        markup.add(types.KeyboardButton('–ù–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è'),
                                   types.KeyboardButton('–ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è'))
                        bot.send_message(message.chat.id, text=stories)
                        bot.send_message(message.chat.id, text='–†–µ—à–∏, —á—Ç–æ –±—É–¥–µ—à—å –¥–µ–ª–∞—Ç—å :)', reply_markup=markup)
                        bot.register_next_step_handler(message, admin_actions)
                    else:
                        markup.add(types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
                        for i in range(len(stories)):
                            if i == len(stories) - 1:
                                bot.send_message(message.chat.id, text=stories[i], reply_markup=markup)
                                bot.register_next_step_handler(message, admin_actions)
                            else:
                                bot.send_message(message.chat.id, text=stories[i])
                elif message.text == '–ò–¥–µ–∏ –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è —Å–æ–æ–±—â–µ—Å—Ç–≤–∞':
                    ideas = get_ideas(argument)
                    if type(ideas) is str:
                        markup.add(types.KeyboardButton('–ù–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è'),
                                   types.KeyboardButton('–ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è'))
                        bot.send_message(message.chat.id, text=ideas)
                        bot.send_message(message.chat.id, text='–†–µ—à–∏, —á—Ç–æ –±—É–¥–µ—à—å –¥–µ–ª–∞—Ç—å :)', reply_markup=markup)
                        bot.register_next_step_handler(message, admin_actions)
                    else:
                        markup.add(types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
                        for i in range(len(ideas)):
                            if i == len(ideas) - 1:
                                bot.send_message(message.chat.id, text=ideas[i], reply_markup=markup)
                                bot.register_next_step_handler(message, admin_actions)
                            else:
                                bot.send_message(message.chat.id, text=ideas[i])
                elif message.text == '–†–æ–ª–µ–≤—ã–µ –º–µ–º—ã':
                    memes = get_memes(argument)
                    if type(memes) is str:
                        markup.add(types.KeyboardButton('–ù–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è'),
                                   types.KeyboardButton('–ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è'))
                        bot.send_message(message.chat.id, text=memes)
                        bot.send_message(message.chat.id, text='–†–µ—à–∏, —á—Ç–æ –±—É–¥–µ—à—å –¥–µ–ª–∞—Ç—å :)', reply_markup=markup)
                        bot.register_next_step_handler(message, admin_actions)
                    else:
                        markup.add(types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
                        for i in range(len(memes)):
                            text = memes[i][0]
                            photo = memes[i][1]
                            if i == len(memes) - 1:
                                bot.send_photo(message.chat.id, photo, text, reply_markup=markup)
                                bot.register_next_step_handler(message, admin_actions)
                            else:
                                bot.send_photo(message.chat.id, photo, text)
                else:
                    markup.add(types.KeyboardButton('–ê–Ω–æ–Ω—Å—ã –∏–≥—Ä'), types.KeyboardButton('–†–æ–ª–µ–≤—ã–µ –∏—Å—Ç–æ—Ä–∏–∏'),
                               types.KeyboardButton('–ò–¥–µ–∏ –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è —Å–æ–æ–±—â–µ—Å—Ç–≤–∞'),
                               types.KeyboardButton('–†–æ–ª–µ–≤—ã–µ –º–µ–º—ã'),
                               types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
                    bot.send_message(message.chat.id,
                                     text='{0.first_name}, —Ç—ã —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ –Ω–∞–∂–∏–º–∞–µ—à—åüòå\n–í—ã–±–µ—Ä–∏ –æ–¥–∏–Ω –∏–∑ '
                                          '–≤–∞—Ä–∏–∞–Ω—Ç–æ–≤, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –Ω–∏–∂–µ :)'.format(message.from_user),
                                     reply_markup=markup)
                    bot.register_next_step_handler(message, view_messages, None)
            else:
                markup.add(types.KeyboardButton('–ê–Ω–æ–Ω—Å—ã –∏–≥—Ä'), types.KeyboardButton('–†–æ–ª–µ–≤—ã–µ –∏—Å—Ç–æ—Ä–∏–∏'),
                           types.KeyboardButton('–ò–¥–µ–∏ –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è —Å–æ–æ–±—â–µ—Å—Ç–≤–∞'),
                           types.KeyboardButton('–†–æ–ª–µ–≤—ã–µ –º–µ–º—ã'),
                           types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
                bot.send_message(message.chat.id,
                                 text='{0.first_name}, —Ç—ã —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ –Ω–∞–∂–∏–º–∞–µ—à—å üòå\n–í—ã–±–µ—Ä–∏ –æ–¥–∏–Ω '
                                      '–∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –Ω–∏–∂–µ :)'.format(message.from_user),
                                 reply_markup=markup)
                bot.register_next_step_handler(message, view_messages, '-')

        else:
            markup.add(types.KeyboardButton('–ê–Ω–æ–Ω—Å—ã –∏–≥—Ä'), types.KeyboardButton('–†–æ–ª–µ–≤—ã–µ –∏—Å—Ç–æ—Ä–∏–∏'),
                       types.KeyboardButton('–ò–¥–µ–∏ –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è —Å–æ–æ–±—â–µ—Å—Ç–≤–∞'),
                       types.KeyboardButton('–†–æ–ª–µ–≤—ã–µ –º–µ–º—ã'),
                       types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
            bot.send_message(message.chat.id,
                             text='{0.first_name}, —Ç—ã —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ –Ω–∞–∂–∏–º–∞–µ—à—å –∏–ª–∏ —à–ª–µ—à—å –Ω–∞–º –∫–∞—Ä—Ç–∏–Ω–∫–∏ üòå\n–í—ã–±–µ—Ä–∏ –æ–¥–∏–Ω '
                                  '–∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –Ω–∏–∂–µ :)'.format(message.from_user),
                             reply_markup=markup)
            bot.register_next_step_handler(message, view_messages, '-')


def delete_messages(message):
    if message.chat.type == 'private':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        if type(message.text) is str:
            if message.text == '/start':
                start(message)
            elif message.text == '/help_me':
                help_me(message)
            elif message.text == '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
                markup.add(types.KeyboardButton('–ù–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è'),
                           types.KeyboardButton('–ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è'))
                bot.send_message(message.chat.id, text='–†–µ—à–∏, —á—Ç–æ –±—É–¥–µ—à—å –¥–µ–ª–∞—Ç—å :)', reply_markup=markup)
                bot.register_next_step_handler(message, admin_actions)
            else:
                if message.text == '–î–∞!':
                    delete_all_messages()
                    markup.add(types.KeyboardButton('–ù–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è'),
                               types.KeyboardButton('–ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è'))
                    bot.send_message(message.chat.id, text='–í—Å–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω—ã ‚úÖ')
                    bot.send_message(message.chat.id, text='–†–µ—à–∏, —á—Ç–æ —Ö–æ—á–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å :)', reply_markup=markup)
                    bot.register_next_step_handler(message, admin_actions)
                elif message.text == '–ù–µ—Ç—å ‚ò∫Ô∏è':
                    markup.add(types.KeyboardButton('–ù–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è'),
                               types.KeyboardButton('–ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è'))
                    bot.send_message(message.chat.id, text='–†–µ—à–∏, —á—Ç–æ —Ö–æ—á–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å :)', reply_markup=markup)
                    bot.register_next_step_handler(message, admin_actions)
                else:
                    pass
        else:
            markup.add(types.KeyboardButton('–î–∞!'),
                       types.KeyboardButton('–ù–µ—Ç—å ‚ò∫Ô∏è'))
            bot.send_message(message.chat.id,
                             text='{0.first_name}, —Ç—ã —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ –Ω–∞–∂–∏–º–∞–µ—à—å –∏–ª–∏ —à–ª–µ—à—å –Ω–∞–º –∫–∞—Ä—Ç–∏–Ω–∫–∏ üòå\n–õ—É—á—à–µ —Ä–µ—à–∏, '
                                  '—Ç—ã –ø—Ä–∞–≤–¥–∞ —Ö–æ—á–µ—à—å —É–¥–∞–ª–∏—Ç—å –≤—Å–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è?'.format(message.from_user),
                             reply_markup=markup)
            bot.register_next_step_handler(message, delete_messages)


def delete_or_not(message):
    if message.chat.type == 'private':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        if type(message.text) is str:
            if message.text == '/start':
                start(message)
            elif message.text == '/help_me':
                help_me(message)
            elif message.text == '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
                markup.add(types.KeyboardButton('–ù–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è'),
                           types.KeyboardButton('–ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è'))
                bot.send_message(message.chat.id, text='–†–µ—à–∏, —á—Ç–æ –±—É–¥–µ—à—å –¥–µ–ª–∞—Ç—å :)', reply_markup=markup)
                bot.register_next_step_handler(message, admin_actions)
            elif message.text == '–£–¥–∞–ª–∏—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ –∞–Ω–æ–Ω—Å—ã':
                markup.add(types.KeyboardButton('–î–∞!'),
                           types.KeyboardButton('–ù–µ—Ç—å ‚ò∫Ô∏è'))
                bot.send_message(message.chat.id, text='–¢—ã –ø—Ä–∞–≤–¥–∞ —Ö–æ—á–µ—à—å —É–¥–∞–ª–∏—Ç—å –≤—Å–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ –∞–Ω–æ–Ω—Å—ã?',
                                 reply_markup=markup)
                bot.register_next_step_handler(message, delete_many_messages, 'game_announcement')
            elif message.text == '–£–¥–∞–ª–∏—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ —Ä–æ–ª–µ–≤—ã–µ –∏—Å—Ç–æ—Ä–∏–∏':
                markup.add(types.KeyboardButton('–î–∞!'),
                           types.KeyboardButton('–ù–µ—Ç—å ‚ò∫Ô∏è'))
                bot.send_message(message.chat.id, text='–¢—ã –ø—Ä–∞–≤–¥–∞ —Ö–æ—á–µ—à—å —É–¥–∞–ª–∏—Ç—å –≤—Å–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ –∏—Å—Ç–æ—Ä–∏–∏?',
                                 reply_markup=markup)
                bot.register_next_step_handler(message, delete_many_messages, 'history')
            elif message.text == '–£–¥–∞–ª–∏—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ –∏–¥–µ–∏':
                markup.add(types.KeyboardButton('–î–∞!'),
                           types.KeyboardButton('–ù–µ—Ç—å ‚ò∫Ô∏è'))
                bot.send_message(message.chat.id, text='–¢—ã –ø—Ä–∞–≤–¥–∞ —Ö–æ—á–µ—à—å —É–¥–∞–ª–∏—Ç—å –≤—Å–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ –∏–¥–µ–∏?',
                                 reply_markup=markup)
                bot.register_next_step_handler(message, delete_many_messages, 'ideas')
            elif message.text == '–£–¥–∞–ª–∏—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ –º–µ–º—ã':
                markup.add(types.KeyboardButton('–î–∞!'),
                           types.KeyboardButton('–ù–µ—Ç—å ‚ò∫Ô∏è'))
                bot.send_message(message.chat.id, text='–¢—ã –ø—Ä–∞–≤–¥–∞ —Ö–æ—á–µ—à—å —É–¥–∞–ª–∏—Ç—å –≤—Å–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ –º–µ–º—ã?',
                                 reply_markup=markup)
                bot.register_next_step_handler(message, delete_many_messages, 'memes')
            else:
                markup.add(types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
                bot.send_message(message.chat.id,
                                 text='{0.first_name}, —Ç—ã —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ –Ω–∞–∂–∏–º–∞–µ—à—å üòå\n–í–µ—Ä–Ω–∏—Å—å –≤ –Ω–∞—á–∞–ª–æ '
                                      ':)'.format(message.from_user), reply_markup=markup)
                bot.register_next_step_handler(message, admin_actions)
        else:
            markup.add(types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
            bot.send_message(message.chat.id,
                             text='{0.first_name}, —Ç—ã —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ –Ω–∞–∂–∏–º–∞–µ—à—å –∏–ª–∏ —à–ª–µ—à—å –Ω–∞–º –∫–∞—Ä—Ç–∏–Ω–∫–∏ üòå\n–í–µ—Ä–Ω–∏—Å—å '
                                  '–≤ –Ω–∞—á–∞–ª–æ :)'.format(message.from_user),
                             reply_markup=markup)
            bot.register_next_step_handler(message, admin_actions)


def delete_many_messages(message, argument):
    if message.chat.type == 'private':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        if type(message.text) is str:
            if message.text == '/start':
                start(message)
            elif message.text == '/help_me':
                help_me(message)
            elif message.text == '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
                markup.add(types.KeyboardButton('–ù–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è'),
                           types.KeyboardButton('–ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è'))
                bot.send_message(message.chat.id, text='–†–µ—à–∏, —á—Ç–æ –±—É–¥–µ—à—å –¥–µ–ª–∞—Ç—å :)', reply_markup=markup)
                bot.register_next_step_handler(message, admin_actions)
            else:
                if message.text == '–î–∞!':
                    delete_some_messages(argument)
                    bot.send_message(message.chat.id, text='–ì–æ—Ç–æ–≤–æ ‚úÖ', reply_markup=markup)
                    markup.add(types.KeyboardButton('–ù–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è'),
                               types.KeyboardButton('–ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è'))
                    bot.send_message(message.chat.id, text='–†–µ—à–∏, —á—Ç–æ —Ö–æ—á–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å :)', reply_markup=markup)
                    bot.register_next_step_handler(message, admin_actions)
                elif message.text == '–ù–µ—Ç—å ‚ò∫Ô∏è':
                    markup.add(types.KeyboardButton('–ù–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è'),
                               types.KeyboardButton('–ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è'))
                    bot.send_message(message.chat.id, text='–†–µ—à–∏, —á—Ç–æ —Ö–æ—á–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å :)', reply_markup=markup)
                    bot.register_next_step_handler(message, admin_actions)
                else:
                    markup.add(types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
                    bot.send_message(message.chat.id,
                                     text='{0.first_name}, —Ç—ã —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ –Ω–∞–∂–∏–º–∞–µ—à—å üòå\n–í–µ—Ä–Ω–∏—Å—å '
                                          '–≤ –Ω–∞—á–∞–ª–æ :)'.format(message.from_user), reply_markup=markup)
                    bot.register_next_step_handler(message, admin_actions)
        else:
            markup.add(types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
            bot.send_message(message.chat.id,
                             text='{0.first_name}, —Ç—ã —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ –Ω–∞–∂–∏–º–∞–µ—à—å –∏–ª–∏ —à–ª–µ—à—å –Ω–∞–º –∫–∞—Ä—Ç–∏–Ω–∫–∏ üòå\n–í–µ—Ä–Ω–∏—Å—å '
                                  '–≤ –Ω–∞—á–∞–ª–æ :)'.format(message.from_user),
                             reply_markup=markup)
            bot.register_next_step_handler(message, admin_actions)


def user_actions(message):
    if message.chat.type == 'private':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        if type(message.text) is str:
            if message.text == '/start':
                start(message)
            elif message.text == '/help_me':
                help_me(message)
            else:
                if message.text == '–ü—Ä–∏—Å–ª–∞—Ç—å –Ω–æ–≤–æ—Å—Ç—å üìù':
                    markup.add(types.KeyboardButton('–ü—Ä–∏—Å–ª–∞—Ç—å –∞–Ω–æ–Ω—Å —Å–≤–æ–µ–π –∏–≥—Ä—ã üé≠'),
                               types.KeyboardButton('–ü—Ä–∏—Å–ª–∞—Ç—å –æ—Ñ–∏–≥–∏—Ç–µ–ª—å–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é –∏–∑ —Å–≤–æ–µ–π —Ä–æ–ª–µ–≤–æ–π –∂–∏–∑–Ω–∏ üåö'),
                               types.KeyboardButton('–ü—Ä–∏—Å–ª–∞—Ç—å –∏–¥–µ—é –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è —Ä–æ–ª–µ–≤–æ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è –≤ –°–µ—Ä–±–∏–∏ üç∑'),
                               types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
                    bot.send_message(message.chat.id,
                                     text='{0.first_name}, –≤—ã–±–µ—Ä–∏, —á—Ç–æ —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å :)'.
                                     format(message.from_user), reply_markup=markup, )
                    bot.register_next_step_handler(message, send_news)
                elif message.text == '–ü—Ä–∏—Å–ª–∞—Ç—å –º–µ–º ü¶Ñ':
                    markup.add(types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
                    bot.send_message(message.chat.id,
                                     text='{0.first_name}, –∑–¥–µ—Å—å –º—ã –±—É–¥–µ–º —Å–æ–±–∏—Ä–∞—Ç—å –Ω–∞—à–∏ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ä–æ–ª–µ–≤—ã–µ –º–µ–º—ã!'.
                                     format(message.from_user))
                    picture = get_example_meme()
                    text = '–ù–∞–ø—Ä–∏–º–µ—Ä, –≤–æ—Ç —Ç–∞–∫–æ–π —Ä–æ–ª–µ–≤–æ–π –º–µ–º —Å "–ü–æ—Å–ª–µ–¥–Ω–µ–≥–æ –û–ø–ª–æ—Ç–∞"'
                    bot.send_photo(message.chat.id, picture, text)
                    bot.send_message(message.chat.id,
                                     text='–ó–∞–≥—Ä—É–∑–∏ —Å–≤–æ–π –º–µ–º :) –ü—Ä–æ—Å—Ç–æ –ø—Ä–∏–∫—Ä–µ–ø–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ '
                                          ':)\n–ï—Å–ª–∏ –ø–µ—Ä–µ–¥—É–º–∞–ª, —Ç–æ –≤–µ—Ä–Ω–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é :)'.format(message.from_user),
                                     reply_markup=markup)
                    bot.register_next_step_handler(message, send_meme)
                else:
                    markup.add(types.KeyboardButton('–ü—Ä–∏—Å–ª–∞—Ç—å –Ω–æ–≤–æ—Å—Ç—å üìù'),
                               types.KeyboardButton('–ü—Ä–∏—Å–ª–∞—Ç—å –º–µ–º ü¶Ñ'))
                    bot.send_message(message.chat.id,
                                     text='{0.first_name}, —Ç—ã —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ –Ω–∞–∂–∏–º–∞–µ—à—åüòå\n–í—ã–±–µ—Ä–∏ –æ–¥–∏–Ω –∏–∑ '
                                          '–≤–∞—Ä–∏–∞–Ω—Ç–æ–≤, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –Ω–∏–∂–µ :)'.format(message.from_user),
                                     reply_markup=markup)
                    bot.register_next_step_handler(message, user_actions)

        else:
            markup.add(types.KeyboardButton('–ü—Ä–∏—Å–ª–∞—Ç—å –Ω–æ–≤–æ—Å—Ç—å üìù'),
                       types.KeyboardButton('–ü—Ä–∏—Å–ª–∞—Ç—å –º–µ–º ü¶Ñ'))
            bot.send_message(message.chat.id,
                             text='{0.first_name}, —Ç—ã —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ –Ω–∞–∂–∏–º–∞–µ—à—åüòå\n–í—ã–±–µ—Ä–∏ –æ–¥–∏–Ω –∏–∑ '
                                  '–≤–∞—Ä–∏–∞–Ω—Ç–æ–≤, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –Ω–∏–∂–µ :)'.format(message.from_user),
                             reply_markup=markup)
            bot.register_next_step_handler(message, user_actions)


def send_news(message):
    if message.chat.type == 'private':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        if type(message.text) is str:
            if message.text == '/start':
                start(message)
            elif message.text == '/help_me':
                help_me(message)
            elif message.text == '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
                markup.add(types.KeyboardButton('–ü—Ä–∏—Å–ª–∞—Ç—å –Ω–æ–≤–æ—Å—Ç—å üìù'),
                           types.KeyboardButton('–ü—Ä–∏—Å–ª–∞—Ç—å –º–µ–º ü¶Ñ'))
                bot.send_message(message.chat.id, text="–†–µ—à–∏, —á—Ç–æ —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å :)".format(message.from_user),
                                 reply_markup=markup)
                bot.register_next_step_handler(message, user_actions)
            else:
                if message.text == '–ü—Ä–∏—Å–ª–∞—Ç—å –∞–Ω–æ–Ω—Å —Å–≤–æ–µ–π –∏–≥—Ä—ã üé≠':
                    markup.add(types.KeyboardButton('–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–π –∞–Ω–æ–Ω—Å'),
                               types.KeyboardButton('–°–æ–∑–¥–∞—Ç—å –∞–Ω–æ–Ω—Å –ø–æ —à–∞–±–ª–æ–Ω—É'),
                               types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
                    bot.send_message(message.chat.id,
                                     text='–í—ã–±–µ—Ä–∏, —á—Ç–æ —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å :)'.
                                     format(message.from_user), reply_markup=markup, )
                    bot.register_next_step_handler(message, announcement)

                elif message.text == '–ü—Ä–∏—Å–ª–∞—Ç—å –æ—Ñ–∏–≥–∏—Ç–µ–ª—å–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é –∏–∑ —Å–≤–æ–µ–π —Ä–æ–ª–µ–≤–æ–π –∂–∏–∑–Ω–∏ üåö':
                    markup.add(types.KeyboardButton('–ü—É—Å—Ç—å –≤—Å–µ –∑–Ω–∞—é—Ç –º–æ—ë –∏–º—è! üíÉ'),
                               types.KeyboardButton('–ù–µ—Ç, —è —Å—Ç–µ—Å–Ω—è—à–∫–∞, —Ö–æ—á—É –±—ã—Ç—å –∞–Ω–æ–Ω–∏–º–Ω—ã–º üëÄ'),
                               types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
                    bot.send_message(message.chat.id, text='–î–ª—è –Ω–∞—á–∞–ª–∞ —É—Ç–æ—á–Ω–∏–º, —Ö–æ—á–µ—à—å –ª–∏ —Ç—ã –æ—Å—Ç–∞—Ç—å—Å—è –∞–Ω–æ–Ω–∏–º–Ω—ã–º –∏–ª–∏ '
                                                           '–ø—É—Å—Ç—å –≤—Å–µ –∑–Ω–∞—é—Ç –∞–≤—Ç–æ—Ä–∞ –∏—Å—Ç–æ—Ä–∏–∏? üòè', reply_markup=markup)
                    bot.register_next_step_handler(message, history)

                elif message.text == '–ü—Ä–∏—Å–ª–∞—Ç—å –∏–¥–µ—é –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è —Ä–æ–ª–µ–≤–æ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è –≤ –°–µ—Ä–±–∏–∏ üç∑':
                    markup.add(types.KeyboardButton('–ü—É—Å—Ç—å –≤—Å–µ –∑–Ω–∞—é—Ç –º–æ—ë –∏–º—è! üíÉ'),
                               types.KeyboardButton('–ù–µ—Ç, —è —Å—Ç–µ—Å–Ω—è—à–∫–∞, —Ö–æ—á—É –±—ã—Ç—å –∞–Ω–æ–Ω–∏–º–Ω—ã–º üëÄ'),
                               types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
                    bot.send_message(message.chat.id, text='–î–ª—è –Ω–∞—á–∞–ª–∞ —É—Ç–æ—á–Ω–∏–º, —Ö–æ—á–µ—à—å –ª–∏ —Ç—ã –æ—Å—Ç–∞—Ç—å—Å—è –∞–Ω–æ–Ω–∏–º–Ω—ã–º –∏–ª–∏ '
                                                           '–ø—É—Å—Ç—å –≤—Å–µ –∑–Ω–∞—é—Ç –∞–≤—Ç–æ—Ä–∞ –∏–¥–µ–∏? üòè', reply_markup=markup)
                    bot.register_next_step_handler(message, idea)
                else:
                    markup.add(types.KeyboardButton('–ü—Ä–∏—Å–ª–∞—Ç—å –∞–Ω–æ–Ω—Å —Å–≤–æ–µ–π –∏–≥—Ä—ã üé≠'),
                               types.KeyboardButton('–ü—Ä–∏—Å–ª–∞—Ç—å –æ—Ñ–∏–≥–∏—Ç–µ–ª—å–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é –∏–∑ —Å–≤–æ–µ–π —Ä–æ–ª–µ–≤–æ–π –∂–∏–∑–Ω–∏ üåö'),
                               types.KeyboardButton('–ü—Ä–∏—Å–ª–∞—Ç—å –∏–¥–µ—é –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è —Ä–æ–ª–µ–≤–æ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è –≤ –°–µ—Ä–±–∏–∏ üç∑'),
                               types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
                    bot.send_message(message.chat.id,
                                     text='{0.first_name}, —Ç—ã —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ –Ω–∞–∂–∏–º–∞–µ—à—åüòå\n–í—ã–±–µ—Ä–∏ –æ–¥–∏–Ω –∏–∑ '
                                          '–≤–∞—Ä–∏–∞–Ω—Ç–æ–≤, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –Ω–∏–∂–µ :)'.format(message.from_user),
                                     reply_markup=markup)
                    bot.register_next_step_handler(message, send_news)
        else:
            markup.add(types.KeyboardButton('–ü—Ä–∏—Å–ª–∞—Ç—å –∞–Ω–æ–Ω—Å —Å–≤–æ–µ–π –∏–≥—Ä—ã üé≠'),
                       types.KeyboardButton('–ü—Ä–∏—Å–ª–∞—Ç—å –æ—Ñ–∏–≥–∏—Ç–µ–ª—å–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é –∏–∑ —Å–≤–æ–µ–π —Ä–æ–ª–µ–≤–æ–π –∂–∏–∑–Ω–∏ üåö'),
                       types.KeyboardButton('–ü—Ä–∏—Å–ª–∞—Ç—å –∏–¥–µ—é –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è —Ä–æ–ª–µ–≤–æ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è –≤ –°–µ—Ä–±–∏–∏ üç∑'),
                       types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
            bot.send_message(message.chat.id,
                             text='{0.first_name}, —Ç—ã —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ –Ω–∞–∂–∏–º–∞–µ—à—åüòå\n–í—ã–±–µ—Ä–∏ –æ–¥–∏–Ω –∏–∑ '
                                  '–≤–∞—Ä–∏–∞–Ω—Ç–æ–≤, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –Ω–∏–∂–µ :)'.format(message.from_user),
                             reply_markup=markup)
            bot.register_next_step_handler(message, send_news)


def send_meme(message):
    if message.chat.type == 'private':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        username = message.from_user.username
        if message.text == '/start':
            start(message)
        elif message.text == '/help_me':
            help_me(message)
        elif message.text == '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
            markup.add(types.KeyboardButton('–ü—Ä–∏—Å–ª–∞—Ç—å –Ω–æ–≤–æ—Å—Ç—å üìù'),
                       types.KeyboardButton('–ü—Ä–∏—Å–ª–∞—Ç—å –º–µ–º ü¶Ñ'))
            bot.send_message(message.chat.id, text="–ü—Ä–∏–≤–µ—Ç, {0.first_name}! –†–µ—à–∏, —á—Ç–æ —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å :)"
                             .format(message.from_user), reply_markup=markup)
            bot.register_next_step_handler(message, user_actions)
        else:
            content_type = message.content_type
            if content_type != 'photo':
                markup.add(types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
                bot.send_message(message.chat.id,
                                 text='{0.first_name}, —Ç—ã —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ –Ω–∞–∂–∏–º–∞–µ—à—åüòå –∏–ª–∏ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—à—å –Ω–∞–º —Å–≤–æ–∏ '
                                      '–º–µ–º—ãüòê\n–ó–∞–≥—Ä—É–∑–∏ —Å–≤–æ–π –º–µ–º (–ø—Ä–æ—Å—Ç–æ –∫–∞—Ä—Ç–∏–Ω–∫–æ–π! –Ω–µ —Ñ–∞–π–ª–æ–º!) –∏–ª–∏ –≤–µ—Ä–Ω–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ '
                                      '–º–µ–Ω—é :)'.format(message.from_user), reply_markup=markup)
                bot.register_next_step_handler(message, send_meme)
            elif content_type == 'photo':
                markup.add(types.KeyboardButton('–ü—Ä–∏—Å–ª–∞—Ç—å –Ω–æ–≤–æ—Å—Ç—å üìù'),
                           types.KeyboardButton('–ü—Ä–∏—Å–ª–∞—Ç—å –º–µ–º ü¶Ñ'))
                # photo = message.photo[-1]  # –ë–µ—Ä–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –Ω–∞–∏–±–æ–ª—å—à–∏–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ–º
                # add_inf_masters(photo.file_id, 'photo', username)
                # back_to_master_short_schedule(message)
                photo = message.photo[-1]
                add_meme(photo.file_id, username)
                bot.send_message(message.chat.id,
                                 text='–£—Ä–∞–∞–∞! –í –Ω–∞—à–µ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –Ω–∞ –æ–¥–∏–Ω –º–µ–º –±–æ–ª—å—à–µ üòçüòçüòç\n–°–∫–æ—Ä–æ –∞–¥–º–∏–Ω –ø–æ—Å–º–æ—Ç—Ä–∏—Ç –µ–≥–æ '
                                      '–∏, –≤–æ–∑–º–æ–∂–Ω–æ, –ø–æ–¥–µ–ª–∏—Ç—Å—è –º–µ–º–æ–º –≤ –æ–±—â–µ–π –≥—Ä—É–ø–ø–µ üòå\n'
                                      '–†–µ—à–∏, —á—Ç–æ —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ :)',
                                 reply_markup=markup)
                bot.register_next_step_handler(message, user_actions)


def announcement(message):
    if message.chat.type == 'private':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        if type(message.text) is str:
            if message.text == '/start':
                start(message)
            elif message.text == '/help_me':
                help_me(message)
            elif message.text == '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
                markup.add(types.KeyboardButton('–ü—Ä–∏—Å–ª–∞—Ç—å –Ω–æ–≤–æ—Å—Ç—å üìù'),
                           types.KeyboardButton('–ü—Ä–∏—Å–ª–∞—Ç—å –º–µ–º ü¶Ñ'))
                bot.send_message(message.chat.id, text="–†–µ—à–∏, —á—Ç–æ —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å :)".format(message.from_user),
                                 reply_markup=markup)
                bot.register_next_step_handler(message, user_actions)
            else:
                if message.text == '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–π –∞–Ω–æ–Ω—Å':
                    markup.add(types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
                    bot.send_message(message.chat.id, text='–ù–∞–ø–∏—à–∏ –≤ —Å–≤–æ–±–æ–¥–Ω–æ–π —Ñ–æ—Ä–º–µ –∞–Ω–æ–Ω—Å —Å–≤–æ–µ–π –∏–≥—Ä—ã :)'.
                                     format(message.from_user), reply_markup=markup)
                    bot.register_next_step_handler(message, send_announcement)
                elif message.text == '–°–æ–∑–¥–∞—Ç—å –∞–Ω–æ–Ω—Å –ø–æ —à–∞–±–ª–æ–Ω—É':
                    markup.add(types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
                    bot.send_message(message.chat.id, text='–°–∫–æ–ø–∏—Ä—É–π —Ç–µ–∫—Å—Ç –∏ —Å–æ–∑–¥–∞–π –∞–Ω–æ–Ω—Å —Å–≤–æ–µ–π –∏–≥—Ä—ã –ø–æ —ç—Ç–æ–º—É '
                                                           '—à–∞–±–ª–æ–Ω—É –∏ –ø—Ä–∏—à–ª–∏ –≤ —Å–ª–µ–¥—É—é—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ :)')
                    bot.send_message(message.chat.id, text='–ù–∞–∑–≤–∞–Ω–∏–µ:\n–ö–æ–≥–¥–∞:\n–ì–¥–µ:\n–°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç:\n–¢–µ–∫—Å—Ç –∞–Ω–æ–Ω—Å–∞:',
                                     reply_markup=markup)
                    bot.register_next_step_handler(message, send_announcement)
                else:
                    markup.add(types.KeyboardButton('–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–π –∞–Ω–æ–Ω—Å'),
                               types.KeyboardButton('–°–æ–∑–¥–∞—Ç—å –∞–Ω–æ–Ω—Å –ø–æ —à–∞–±–ª–æ–Ω—É'),
                               types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
                    bot.send_message(message.chat.id,
                                     text='{0.first_name}, —Ç—ã —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ –Ω–∞–∂–∏–º–∞–µ—à—åüòå\n–í—ã–±–µ—Ä–∏ –æ–¥–∏–Ω –∏–∑ '
                                          '–≤–∞—Ä–∏–∞–Ω—Ç–æ–≤, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –Ω–∏–∂–µ :)'.format(message.from_user),
                                     reply_markup=markup)
                    bot.register_next_step_handler(message, announcement)
        else:
            markup.add(types.KeyboardButton('–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–π –∞–Ω–æ–Ω—Å'),
                       types.KeyboardButton('–°–æ–∑–¥–∞—Ç—å –∞–Ω–æ–Ω—Å –ø–æ —à–∞–±–ª–æ–Ω—É'),
                       types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
            bot.send_message(message.chat.id,
                             text='{0.first_name}, —Ç—ã —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ –Ω–∞–∂–∏–º–∞–µ—à—åüòå\n–í—ã–±–µ—Ä–∏ –æ–¥–∏–Ω –∏–∑ '
                                  '–≤–∞—Ä–∏–∞–Ω—Ç–æ–≤, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –Ω–∏–∂–µ :)'.format(message.from_user),
                             reply_markup=markup)
            bot.register_next_step_handler(message, announcement)


def send_announcement(message):
    if message.chat.type == 'private':
        username = message.from_user.username
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        if type(message.text) is str:
            if message.text == '/start':
                start(message)
            elif message.text == '/help_me':
                help_me(message)
            elif message.text == '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
                markup.add(types.KeyboardButton('–ü—Ä–∏—Å–ª–∞—Ç—å –Ω–æ–≤–æ—Å—Ç—å üìù'),
                           types.KeyboardButton('–ü—Ä–∏—Å–ª–∞—Ç—å –º–µ–º ü¶Ñ'))
                bot.send_message(message.chat.id, text="–†–µ—à–∏, —á—Ç–æ —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å :)", reply_markup=markup)
                bot.register_next_step_handler(message, user_actions)
            else:
                add_announcement(message.text, username)
                markup.add(types.KeyboardButton('–í—Å—ë –∫—Ä—É—Ç–æ, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–Ω–æ–Ω—Å –∞–¥–º–∏–Ω—É üíÉ'),
                           types.KeyboardButton('–ù–µ—Ç, –ø–æ–ø—Ä–∞–≤–ª—é –Ω–µ–º–Ω–æ–≥–æ üëÄ'),
                           types.KeyboardButton('–ü–µ—Ä–µ–¥—É–º–∞–ª –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∞–Ω–æ–Ω—Å üåö'))
                bot.send_message(message.chat.id, text='{0.first_name}, –µ—â—ë —Ä–∞–∑ –ø—Ä–æ—á–∏—Ç–∞–π –∏ –ø—Ä–æ–≤–µ—Ä—å —Å–≤–æ–π '
                                                       '–∞–Ω–æ–Ω—Å üòå'.format(message.from_user))
                bot.send_message(message.chat.id, text=message.text, reply_markup=markup)
                bot.register_next_step_handler(message, finally_send_announcement)
        else:
            markup.add(types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
            bot.send_message(message.chat.id,
                             text='{0.first_name}, —Ç—ã —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ –Ω–∞–∂–∏–º–∞–µ—à—åüòå –∏–ª–∏ —à–ª–µ—à—å –Ω–∞–º –∫–∞—Ä—Ç–∏–Ω–∫–∏ –≤–º–µ—Å—Ç–æ —Ç–µ–∫—Å—Ç–∞ '
                                  '–∞–Ω–æ–Ω—Å–∞ üôÉ\n–ù–∞–ø–∏—à–∏ –∞–Ω–æ–Ω—Å —Å–≤–æ–µ–π –∏–≥—Ä—ã –∏–ª–∏ –≤–µ—Ä–Ω–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ '
                                  '–º–µ–Ω—é :)'.format(message.from_user), reply_markup=markup)
            bot.register_next_step_handler(message, send_announcement)


def finally_send_announcement(message):
    if message.chat.type == 'private':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        if type(message.text) is str:
            if message.text == '/start':
                delete_announcement()
                start(message)
            elif message.text == '/help_me':
                delete_announcement()
                help_me(message)
            elif message.text == '–í—Å—ë –∫—Ä—É—Ç–æ, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–Ω–æ–Ω—Å –∞–¥–º–∏–Ω—É üíÉ':
                bot.send_message(message.chat.id, text='–ê–Ω–æ–Ω—Å —Ç–≤–æ–µ–π –∏–≥—Ä—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω—É :)\n–ï—Å–ª–∏ —É –∞–¥–º–∏–Ω–∞ '
                                                       '–≤–æ–∑–Ω–∏–∫–Ω—É—Ç –≤–æ–ø—Ä–æ—Å—ã –ø–æ —Ç–≤–æ–µ–π –∏–≥—Ä–µ - –æ–Ω —Ç–µ–±–µ –Ω–∞–ø–∏—à–µ—Ç :)')
                markup.add(types.KeyboardButton('–ü—Ä–∏—Å–ª–∞—Ç—å –Ω–æ–≤–æ—Å—Ç—å üìù'),
                           types.KeyboardButton('–ü—Ä–∏—Å–ª–∞—Ç—å –º–µ–º ü¶Ñ'))
                bot.send_message(message.chat.id, text="{0.first_name}, —Ä–µ—à–∏, —á—Ç–æ —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å :)"
                                 .format(message.from_user), reply_markup=markup)
                bot.register_next_step_handler(message, user_actions)
            elif message.text == '–ù–µ—Ç, –ø–æ–ø—Ä–∞–≤–ª—é –Ω–µ–º–Ω–æ–≥–æ üëÄ':
                delete_announcement()
                markup.add(types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
                bot.send_message(message.chat.id, text='–û—Ç–ø—Ä–∞–≤—å –Ω–æ–≤—ã–π –∞–Ω–æ–Ω—Å —Å–≤–æ–µ–π –∏–≥—Ä—ã :)'.
                                 format(message.from_user), reply_markup=markup)
                bot.register_next_step_handler(message, send_announcement)
            elif message.text == '–ü–µ—Ä–µ–¥—É–º–∞–ª –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∞–Ω–æ–Ω—Å üåö':
                delete_announcement()
                markup.add(types.KeyboardButton('–ü—Ä–∏—Å–ª–∞—Ç—å –Ω–æ–≤–æ—Å—Ç—å üìù'),
                           types.KeyboardButton('–ü—Ä–∏—Å–ª–∞—Ç—å –º–µ–º ü¶Ñ'))
                bot.send_message(message.chat.id, text="{0.first_name}, —Ä–µ—à–∏, —á—Ç–æ —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å :)"
                                 .format(message.from_user), reply_markup=markup)
                bot.register_next_step_handler(message, user_actions)
            else:
                markup.add(types.KeyboardButton('–í—Å—ë –∫—Ä—É—Ç–æ, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–Ω–æ–Ω—Å –∞–¥–º–∏–Ω—É üíÉ'),
                           types.KeyboardButton('–ù–µ—Ç, –ø–æ–ø—Ä–∞–≤–ª—é –Ω–µ–º–Ω–æ–≥–æ üëÄ'),
                           types.KeyboardButton('–ü–µ—Ä–µ–¥—É–º–∞–ª –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∞–Ω–æ–Ω—Å üåö'))
                bot.send_message(message.chat.id,
                                 text='{0.first_name}, —Ç—ã —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ –Ω–∞–∂–∏–º–∞–µ—à—åüòå \n–í—ã–±–µ—Ä–∏ –æ–¥–∏–Ω –∏–∑ —ç—Ç–∏—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤, '
                                      '—á—Ç–æ –¥–µ–ª–∞—Ç—å —Å —Ç–≤–æ–∏–º –∞–Ω–æ–Ω—Å–æ–º :)'.format(message.from_user), reply_markup=markup)
                bot.register_next_step_handler(message, finally_send_announcement)
        else:
            markup.add(types.KeyboardButton('–í—Å—ë –∫—Ä—É—Ç–æ, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–Ω–æ–Ω—Å –∞–¥–º–∏–Ω—É üíÉ'),
                       types.KeyboardButton('–ù–µ—Ç, –ø–æ–ø—Ä–∞–≤–ª—é –Ω–µ–º–Ω–æ–≥–æ üëÄ'),
                       types.KeyboardButton('–ü–µ—Ä–µ–¥—É–º–∞–ª –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∞–Ω–æ–Ω—Å üåö'))
            bot.send_message(message.chat.id,
                             text='{0.first_name}, —Ç—ã —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ –Ω–∞–∂–∏–º–∞–µ—à—åüòå –∏–ª–∏ —à–ª–µ—à—å –Ω–∞–º –∫–∞—Ä—Ç–∏–Ω–∫–∏ –≤–º–µ—Å—Ç–æ —Ç–µ–∫—Å—Ç–∞ '
                                  '–∞–Ω–æ–Ω—Å–∞ üôÉ\n–í—ã–±–µ—Ä–∏ –æ–¥–∏–Ω –∏–∑ —ç—Ç–∏—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤, —á—Ç–æ –¥–µ–ª–∞—Ç—å —Å —Ç–≤–æ–∏–º –∞–Ω–æ–Ω—Å–æ–º '
                                  ':)'.format(message.from_user), reply_markup=markup)
            bot.register_next_step_handler(message, finally_send_announcement)


def history(message):
    if message.chat.type == 'private':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        if type(message.text) is str:
            if message.text == '/start':
                start(message)
            elif message.text == '/help_me':
                help_me(message)
            elif message.text == '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
                markup.add(types.KeyboardButton('–ü—Ä–∏—Å–ª–∞—Ç—å –Ω–æ–≤–æ—Å—Ç—å üìù'),
                           types.KeyboardButton('–ü—Ä–∏—Å–ª–∞—Ç—å –º–µ–º ü¶Ñ'))
                bot.send_message(message.chat.id, text="–†–µ—à–∏, —á—Ç–æ —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å :)", reply_markup=markup)
                bot.register_next_step_handler(message, user_actions)
            elif message.text == '–ü—É—Å—Ç—å –≤—Å–µ –∑–Ω–∞—é—Ç –º–æ—ë –∏–º—è! üíÉ':
                markup.add(types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
                bot.send_message(message.chat.id,
                                 text='{0.first_name}, —Ö–æ—Ä–æ—à–æ!\n–ù–∞–ø–∏—à–∏ —Å—é–¥–∞ —Ç–æ, —á–µ–º —Ö–æ—á–µ—à—å –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å —Å–æ–æ–±—â–µ—Å—Ç–≤–æ–º '
                                      '—Ä–æ–ª–µ–≤–∏–∫–æ–≤ ‚ò∫Ô∏è\n–ú–æ–∂–µ—Ç —Ç–≤–æ—è –∏—Å—Ç–æ—Ä–∏—è –ø–æ—è–≤–∏—Ç—Å—è –≤ –≥—Ä—É–ø–ø–µ –∏–ª–∏ –ª—è–∂–µ—Ç –≤ –æ—Å–Ω–æ–≤—É –Ω–æ–≤–æ–π '
                                      '–∏–≥—Ä—ã ‚ò∫Ô∏è'.format(message.from_user), reply_markup=markup)
                bot.register_next_step_handler(message, send_history)
            elif message.text == '–ù–µ—Ç, —è —Å—Ç–µ—Å–Ω—è—à–∫–∞, —Ö–æ—á—É –±—ã—Ç—å –∞–Ω–æ–Ω–∏–º–Ω—ã–º üëÄ':
                markup.add(types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
                bot.send_message(message.chat.id,
                                 text='{0.first_name}, —Ö–æ—Ä–æ—à–æ!\n–ù–∞–ø–∏—à–∏ —Å—é–¥–∞ —Ç–æ, —á–µ–º —Ö–æ—á–µ—à—å –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å —Å–æ–æ–±—â–µ—Å—Ç–≤–æ–º '
                                      '—Ä–æ–ª–µ–≤–∏–∫–æ–≤ ‚ò∫Ô∏è\n–ú–æ–∂–µ—Ç —Ç–≤–æ—è –∏—Å—Ç–æ—Ä–∏—è –ø–æ—è–≤–∏—Ç—Å—è –≤ –≥—Ä—É–ø–ø–µ –∏–ª–∏ –ª—è–∂–µ—Ç –≤ –æ—Å–Ω–æ–≤—É –Ω–æ–≤–æ–π '
                                      '–∏–≥—Ä—ã ‚ò∫Ô∏è'.format(message.from_user), reply_markup=markup)
                bot.register_next_step_handler(message, send_history_anonymous)
            else:
                markup.add(types.KeyboardButton('–ü—É—Å—Ç—å –≤—Å–µ –∑–Ω–∞—é—Ç –º–æ—ë –∏–º—è! üíÉ'),
                           types.KeyboardButton('–ù–µ—Ç, —è —Å—Ç–µ—Å–Ω—è—à–∫–∞, —Ö–æ—á—É –±—ã—Ç—å –∞–Ω–æ–Ω–∏–º–Ω—ã–º üëÄ'),
                           types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
                bot.send_message(message.chat.id, text='–ò –≤—Å—ë-—Ç–∞–∫–∏ –¥–∞–≤–∞–π —Å–Ω–∞—á–∞–ª–∞ —Ä–µ—à–∏–º, —Ö–æ—á–µ—à—å –ª–∏ —Ç—ã –æ—Å—Ç–∞—Ç—å—Å—è '
                                                       '–∞–Ω–æ–Ω–∏–º–Ω—ã–º –∏–ª–∏ –ø—É—Å—Ç—å –≤—Å–µ –∑–Ω–∞—é—Ç –∞–≤—Ç–æ—Ä–∞ –∏—Å—Ç–æ—Ä–∏–∏? üòè',
                                 reply_markup=markup)
                bot.register_next_step_handler(message, history)
        else:
            markup.add(types.KeyboardButton('–ü—É—Å—Ç—å –≤—Å–µ –∑–Ω–∞—é—Ç –º–æ—ë –∏–º—è! üíÉ'),
                       types.KeyboardButton('–ù–µ—Ç, —è —Å—Ç–µ—Å–Ω—è—à–∫–∞, —Ö–æ—á—É –±—ã—Ç—å –∞–Ω–æ–Ω–∏–º–Ω—ã–º üëÄ'),
                       types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
            bot.send_message(message.chat.id,
                             text='{0.first_name}, —Ç—ã —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ –Ω–∞–∂–∏–º–∞–µ—à—åüòå –∏–ª–∏ —à–ª–µ—à—å –Ω–∞–º –∫–∞—Ä—Ç–∏–Ω–∫–∏ –≤–º–µ—Å—Ç–æ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ '
                                  '–≤–æ–ø—Ä–æ—Å—ã üôÉ\n–†–µ—à–∏, —Ö–æ—á–µ—à—å –ª–∏ —Ç—ã –ø—Ä–∏—Å–ª–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é –∞–Ω–æ–Ω–∏–º–Ω–æ –∏–ª–∏ –Ω–µ—Ç :)\n'
                                  '–ò–ª–∏ –≤–µ—Ä–Ω–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'.format(message.from_user),
                             reply_markup=markup)
            bot.register_next_step_handler(message, history)


def send_history(message):
    if message.chat.type == 'private':
        username = message.from_user.username
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        if type(message.text) is str:
            if message.text == '/start':
                start(message)
            elif message.text == '/help_me':
                help_me(message)
            elif message.text == '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
                markup.add(types.KeyboardButton('–ü—Ä–∏—Å–ª–∞—Ç—å –Ω–æ–≤–æ—Å—Ç—å üìù'),
                           types.KeyboardButton('–ü—Ä–∏—Å–ª–∞—Ç—å –º–µ–º ü¶Ñ'))
                bot.send_message(message.chat.id, text="–†–µ—à–∏, —á—Ç–æ —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å :)", reply_markup=markup)
                bot.register_next_step_handler(message, user_actions)
            else:
                add_history(message.text, username, 'identified')
                markup.add(types.KeyboardButton('–í—Å—ë –∫—Ä—É—Ç–æ, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –∞–¥–º–∏–Ω—É üíÉ'),
                           types.KeyboardButton('–ù–µ—Ç, –ø–æ–ø—Ä–∞–≤–ª—é –Ω–µ–º–Ω–æ–≥–æ üëÄ'),
                           types.KeyboardButton('–ü–µ—Ä–µ–¥—É–º–∞–ª –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∏—Å—Ç–æ—Ä–∏—é üåö'))
                bot.send_message(message.chat.id, text='{0.first_name}, –µ—â—ë —Ä–∞–∑ –ø—Ä–æ—á–∏—Ç–∞–π –∏ –ø—Ä–æ–≤–µ—Ä—å —Å–≤–æ—é –∏—Å—Ç–æ—Ä–∏—é '
                                                       'üòå'.format(message.from_user))
                bot.send_message(message.chat.id, text=message.text, reply_markup=markup)
                bot.register_next_step_handler(message, finally_send_history)
        else:
            markup.add(types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
            bot.send_message(message.chat.id,
                             text='{0.first_name}, —Ç—ã —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ –Ω–∞–∂–∏–º–∞–µ—à—åüòå –∏–ª–∏ —à–ª–µ—à—å –Ω–∞–º –∫–∞—Ä—Ç–∏–Ω–∫–∏ –≤–º–µ—Å—Ç–æ —Ç–µ–∫—Å—Ç–∞ '
                                  '–∏—Å—Ç–æ—Ä–∏–∏ üôÉ\n–ù–∞–ø–∏—à–∏ —Å–≤–æ—é –∏—Å—Ç–æ—Ä–∏—é –∏–ª–∏ –≤–µ—Ä–Ω–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é '
                                  ':)'.format(message.from_user), reply_markup=markup)
            bot.register_next_step_handler(message, send_history)


def send_history_anonymous(message):
    if message.chat.type == 'private':
        username = message.from_user.username
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        if type(message.text) is str:
            if message.text == '/start':
                start(message)
            elif message.text == '/help_me':
                help_me(message)
            elif message.text == '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
                markup.add(types.KeyboardButton('–ü—Ä–∏—Å–ª–∞—Ç—å –Ω–æ–≤–æ—Å—Ç—å üìù'),
                           types.KeyboardButton('–ü—Ä–∏—Å–ª–∞—Ç—å –º–µ–º ü¶Ñ'))
                bot.send_message(message.chat.id, text="–†–µ—à–∏, —á—Ç–æ —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å :)", reply_markup=markup)
                bot.register_next_step_handler(message, user_actions)
            else:
                add_history(message.text, username, 'anonymous')
                markup.add(types.KeyboardButton('–í—Å—ë –∫—Ä—É—Ç–æ, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –∞–¥–º–∏–Ω—É üíÉ'),
                           types.KeyboardButton('–ù–µ—Ç, –ø–æ–ø—Ä–∞–≤–ª—é –Ω–µ–º–Ω–æ–≥–æ üëÄ'),
                           types.KeyboardButton('–ü–µ—Ä–µ–¥—É–º–∞–ª –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∏—Å—Ç–æ—Ä–∏—é üåö'))
                bot.send_message(message.chat.id, text='{0.first_name}, –µ—â—ë —Ä–∞–∑ –ø—Ä–æ—á–∏—Ç–∞–π –∏ –ø—Ä–æ–≤–µ—Ä—å —Å–≤–æ—é –∏—Å—Ç–æ—Ä–∏—é '
                                                       'üòå'.format(message.from_user))
                bot.send_message(message.chat.id, text=message.text, reply_markup=markup)
                bot.register_next_step_handler(message, finally_send_history)
        else:
            markup.add(types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
            bot.send_message(message.chat.id,
                             text='{0.first_name}, —Ç—ã —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ –Ω–∞–∂–∏–º–∞–µ—à—åüòå –∏–ª–∏ —à–ª–µ—à—å –Ω–∞–º –∫–∞—Ä—Ç–∏–Ω–∫–∏ –≤–º–µ—Å—Ç–æ —Ç–µ–∫—Å—Ç–∞ '
                                  '–∏—Å—Ç–æ—Ä–∏–∏ üôÉ\n–ù–∞–ø–∏—à–∏ —Å–≤–æ—é –∏—Å—Ç–æ—Ä–∏—é –∏–ª–∏ –≤–µ—Ä–Ω–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é '
                                  ':)'.format(message.from_user), reply_markup=markup)
            bot.register_next_step_handler(message, send_history_anonymous)


def finally_send_history(message):
    if message.chat.type == 'private':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        if type(message.text) is str:
            if message.text == '/start':
                delete_history()
                start(message)
            elif message.text == '/help_me':
                delete_history()
                help_me(message)
            elif message.text == '–í—Å—ë –∫—Ä—É—Ç–æ, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –∞–¥–º–∏–Ω—É üíÉ':
                bot.send_message(message.chat.id, text='–¢–≤–æ—è –∏—Å—Ç–æ—Ä–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∞–¥–º–∏–Ω—É :)\n–ï—Å–ª–∏ —É –∞–¥–º–∏–Ω–∞ '
                                                       '–≤–æ–∑–Ω–∏–∫–Ω—É—Ç –≤–æ–ø—Ä–æ—Å—ã - –æ–Ω —Ç–µ–±–µ –Ω–∞–ø–∏—à–µ—Ç :)')
                markup.add(types.KeyboardButton('–ü—Ä–∏—Å–ª–∞—Ç—å –Ω–æ–≤–æ—Å—Ç—å üìù'),
                           types.KeyboardButton('–ü—Ä–∏—Å–ª–∞—Ç—å –º–µ–º ü¶Ñ'))
                bot.send_message(message.chat.id, text="{0.first_name}, —Ä–µ—à–∏, —á—Ç–æ —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å :)"
                                 .format(message.from_user), reply_markup=markup)
                bot.register_next_step_handler(message, user_actions)
            elif message.text == '–ù–µ—Ç, –ø–æ–ø—Ä–∞–≤–ª—é –Ω–µ–º–Ω–æ–≥–æ üëÄ':
                delete_history()
                markup.add(types.KeyboardButton('–ü—É—Å—Ç—å –≤—Å–µ –∑–Ω–∞—é—Ç –º–æ—ë –∏–º—è! üíÉ'),
                           types.KeyboardButton('–ù–µ—Ç, —è —Å—Ç–µ—Å–Ω—è—à–∫–∞, —Ö–æ—á—É –±—ã—Ç—å –∞–Ω–æ–Ω–∏–º–Ω—ã–º üëÄ'),
                           types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
                bot.send_message(message.chat.id, text='–ù–∞–ø–æ–º–Ω–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Ö–æ—á–µ—à—å –ª–∏ —Ç—ã –æ—Å—Ç–∞—Ç—å—Å—è –∞–Ω–æ–Ω–∏–º–Ω—ã–º –∏–ª–∏ '
                                                       '–ø—É—Å—Ç—å –≤—Å–µ –∑–Ω–∞—é—Ç –∞–≤—Ç–æ—Ä–∞ –∏—Å—Ç–æ—Ä–∏–∏? üòè', reply_markup=markup)
                bot.register_next_step_handler(message, history)
            elif message.text == '–ü–µ—Ä–µ–¥—É–º–∞–ª –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∏—Å—Ç–æ—Ä–∏—é üåö':
                delete_history()
                markup.add(types.KeyboardButton('–ü—Ä–∏—Å–ª–∞—Ç—å –Ω–æ–≤–æ—Å—Ç—å üìù'),
                           types.KeyboardButton('–ü—Ä–∏—Å–ª–∞—Ç—å –º–µ–º ü¶Ñ'))
                bot.send_message(message.chat.id, text="{0.first_name}, —Ä–µ—à–∏, —á—Ç–æ —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å :)"
                                 .format(message.from_user), reply_markup=markup)
                bot.register_next_step_handler(message, user_actions)
            else:
                markup.add(types.KeyboardButton('–í—Å—ë –∫—Ä—É—Ç–æ, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –∞–¥–º–∏–Ω—É üíÉ'),
                           types.KeyboardButton('–ù–µ—Ç, –ø–æ–ø—Ä–∞–≤–ª—é –Ω–µ–º–Ω–æ–≥–æ üëÄ'),
                           types.KeyboardButton('–ü–µ—Ä–µ–¥—É–º–∞–ª –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∏—Å—Ç–æ—Ä–∏—é üåö'))
                bot.send_message(message.chat.id,
                                 text='{0.first_name}, —Ç—ã —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ –Ω–∞–∂–∏–º–∞–µ—à—åüòå \n–í—ã–±–µ—Ä–∏ –æ–¥–∏–Ω –∏–∑ —ç—Ç–∏—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤, '
                                      '—á—Ç–æ –¥–µ–ª–∞—Ç—å —Å —Ç–≤–æ–µ–π –∏—Å—Ç–æ—Ä–∏–µ–π :)'.format(message.from_user), reply_markup=markup)
                bot.register_next_step_handler(message, finally_send_history)
        else:
            markup.add(types.KeyboardButton('–í—Å—ë –∫—Ä—É—Ç–æ, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –∞–¥–º–∏–Ω—É üíÉ'),
                       types.KeyboardButton('–ù–µ—Ç, –ø–æ–ø—Ä–∞–≤–ª—é –Ω–µ–º–Ω–æ–≥–æ üëÄ'),
                       types.KeyboardButton('–ü–µ—Ä–µ–¥—É–º–∞–ª –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∏—Å—Ç–æ—Ä–∏—é üåö'))
            bot.send_message(message.chat.id,
                             text='{0.first_name}, —Ç—ã —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ –Ω–∞–∂–∏–º–∞–µ—à—å –∏–ª–∏ —à–ª–µ—à—å –Ω–∞–º –∫–∞—Ä—Ç–∏–Ω–∫–∏ –≤–º–µ—Å—Ç–æ —Ç–µ–∫—Å—Ç–∞ üòå'
                                  '\n–í—ã–±–µ—Ä–∏ –æ–¥–∏–Ω –∏–∑ —ç—Ç–∏—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤, —á—Ç–æ –¥–µ–ª–∞—Ç—å —Å —Ç–≤–æ–µ–π –∏—Å—Ç–æ—Ä–∏–µ–π '
                                  ':)'.format(message.from_user), reply_markup=markup)
            bot.register_next_step_handler(message, finally_send_history)


def idea(message):
    if message.chat.type == 'private':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        if type(message.text) is str:
            if message.text == '/start':
                start(message)
            elif message.text == '/help_me':
                help_me(message)
            elif message.text == '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
                markup.add(types.KeyboardButton('–ü—Ä–∏—Å–ª–∞—Ç—å –Ω–æ–≤–æ—Å—Ç—å üìù'),
                           types.KeyboardButton('–ü—Ä–∏—Å–ª–∞—Ç—å –º–µ–º ü¶Ñ'))
                bot.send_message(message.chat.id, text="–†–µ—à–∏, —á—Ç–æ —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å :)", reply_markup=markup)
                bot.register_next_step_handler(message, user_actions)
            elif message.text == '–ü—É—Å—Ç—å –≤—Å–µ –∑–Ω–∞—é—Ç –º–æ—ë –∏–º—è! üíÉ':
                markup.add(types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
                bot.send_message(message.chat.id,
                                 text='{0.first_name}, —Ö–æ—Ä–æ—à–æ!\n–ù–∞–ø–∏—à–∏ —Å—é–¥–∞ —Å–≤–æ–∏ –º—ã—Å–ª–∏ –∏ –∏–¥–µ–∏, —á—Ç–æ –±—ã —Ç—ã —Ö–æ—Ç–µ–ª '
                                      '—É–ª—É—á—à–∏—Ç—å/–ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –Ω–æ–≤–æ–≥–æ –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è —Ä–æ–ª–µ–≤–æ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è –∏–ª–∏ –¥–ª—è '
                                      '—Ä–∞–∑–≤–∏—Ç–∏—è —ç—Ç–æ–≥–æ –∫–∞–Ω–∞–ª–∞ ‚ò∫Ô∏è\n–ê–¥–º–∏–Ω –ø—Ä–æ—á–∏—Ç–∞–µ—Ç –∏, –µ—Å–ª–∏ –µ–≥–æ –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç —Ç–≤–æ—è –∏–¥–µ—è, '
                                      '—Å–≤—è–∂–µ—Ç—Å—è —Å —Ç–æ–±–æ–π –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π, –µ—Å–ª–∏ —Ç—ã —É–∫–∞–∑–∞–ª —Å–≤–æ–π '
                                      '–∫–æ–Ω—Ç–∞–∫—Ç :)\n–ò –¥–∞–≤–∞–π —Å—Ä–∞–∑—É –¥–æ–≥–æ–≤–æ—Ä–∏–º—Å—è, —á—Ç–æ –∞–¥–º–∏–Ω –ø–æ —Å–≤–æ–µ–º—É –∂–µ–ª–∞–Ω–∏—é –º–æ–∂–µ—Ç '
                                      '–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏–ª–∏ –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–≤–æ–∏ –∏–¥–µ–∏ –∏ —á—Ç–æ —Ç—ã –¥–µ–ª–∏—à—å—Å—è –∏–º–∏ –±–µ–∑–≤–æ–∑–º–µ–∑–¥–Ω–æ '
                                      '‚ò∫Ô∏è'.format(message.from_user), reply_markup=markup)
                bot.register_next_step_handler(message, send_idea)
            elif message.text == '–ù–µ—Ç, —è —Å—Ç–µ—Å–Ω—è—à–∫–∞, —Ö–æ—á—É –±—ã—Ç—å –∞–Ω–æ–Ω–∏–º–Ω—ã–º üëÄ':
                markup.add(types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
                bot.send_message(message.chat.id,
                                 text='{0.first_name}, —Ö–æ—Ä–æ—à–æ!\n–ù–∞–ø–∏—à–∏ —Å—é–¥–∞ —Å–≤–æ–∏ –º—ã—Å–ª–∏ –∏ –∏–¥–µ–∏, —á—Ç–æ –±—ã —Ç—ã —Ö–æ—Ç–µ–ª '
                                      '—É–ª—É—á—à–∏—Ç—å/–ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –Ω–æ–≤–æ–≥–æ –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è —Ä–æ–ª–µ–≤–æ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è –∏–ª–∏ –¥–ª—è '
                                      '—Ä–∞–∑–≤–∏—Ç–∏—è —ç—Ç–æ–≥–æ –∫–∞–Ω–∞–ª–∞ ‚ò∫Ô∏è\n–ê–¥–º–∏–Ω –ø—Ä–æ—á–∏—Ç–∞–µ—Ç –∏, –µ—Å–ª–∏ –µ–≥–æ –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç —Ç–≤–æ—è –∏–¥–µ—è, '
                                      '—Å–≤—è–∂–µ—Ç—Å—è —Å —Ç–æ–±–æ–π –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π, –µ—Å–ª–∏ —Ç—ã —É–∫–∞–∑–∞–ª —Å–≤–æ–π '
                                      '–∫–æ–Ω—Ç–∞–∫—Ç :)\n–ò –¥–∞–≤–∞–π —Å—Ä–∞–∑—É –¥–æ–≥–æ–≤–æ—Ä–∏–º—Å—è, —á—Ç–æ –∞–¥–º–∏–Ω –ø–æ —Å–≤–æ–µ–º—É –∂–µ–ª–∞–Ω–∏—é –º–æ–∂–µ—Ç '
                                      '–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏–ª–∏ –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–≤–æ–∏ –∏–¥–µ–∏ –∏ —á—Ç–æ —Ç—ã –¥–µ–ª–∏—à—å—Å—è –∏–º–∏ –±–µ–∑–≤–æ–∑–º–µ–∑–¥–Ω–æ '
                                      '‚ò∫Ô∏è'.format(message.from_user), reply_markup=markup)
                bot.register_next_step_handler(message, send_idea_anonymous)
            else:
                markup.add(types.KeyboardButton('–ü—É—Å—Ç—å –≤—Å–µ –∑–Ω–∞—é—Ç –º–æ—ë –∏–º—è! üíÉ'),
                           types.KeyboardButton('–ù–µ—Ç, —è —Å—Ç–µ—Å–Ω—è—à–∫–∞, —Ö–æ—á—É –±—ã—Ç—å –∞–Ω–æ–Ω–∏–º–Ω—ã–º üëÄ'),
                           types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
                bot.send_message(message.chat.id, text='–ò –≤—Å—ë-—Ç–∞–∫–∏ –¥–∞–≤–∞–π —Å–Ω–∞—á–∞–ª–∞ —Ä–µ—à–∏–º, —Ö–æ—á–µ—à—å –ª–∏ —Ç—ã –æ—Å—Ç–∞—Ç—å—Å—è '
                                                       '–∞–Ω–æ–Ω–∏–º–Ω—ã–º –∏–ª–∏ –Ω–µ—Ç? üòè',
                                 reply_markup=markup)
                bot.register_next_step_handler(message, idea)
        else:
            markup.add(types.KeyboardButton('–ü—É—Å—Ç—å –≤—Å–µ –∑–Ω–∞—é—Ç –º–æ—ë –∏–º—è! üíÉ'),
                       types.KeyboardButton('–ù–µ—Ç, —è —Å—Ç–µ—Å–Ω—è—à–∫–∞, —Ö–æ—á—É –±—ã—Ç—å –∞–Ω–æ–Ω–∏–º–Ω—ã–º üëÄ'),
                       types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
            bot.send_message(message.chat.id,
                             text='{0.first_name}, —Ç—ã —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ –Ω–∞–∂–∏–º–∞–µ—à—åüòå –∏–ª–∏ —à–ª–µ—à—å –Ω–∞–º –∫–∞—Ä—Ç–∏–Ω–∫–∏ –≤–º–µ—Å—Ç–æ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ '
                                  '–≤–æ–ø—Ä–æ—Å—ã üôÉ\n–†–µ—à–∏, —Ö–æ—á–µ—à—å –ª–∏ —Ç—ã –ø—Ä–∏—Å–ª–∞—Ç—å —Å–≤–æ–∏ –∏–¥–µ–∏ –∞–Ω–æ–Ω–∏–º–Ω–æ –∏–ª–∏ –Ω–µ—Ç :)\n'
                                  '–ò–ª–∏ –≤–µ—Ä–Ω–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'.format(message.from_user),
                             reply_markup=markup)
            bot.register_next_step_handler(message, idea)


def send_idea(message):
    if message.chat.type == 'private':
        username = message.from_user.username
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        if type(message.text) is str:
            if message.text == '/start':
                start(message)
            elif message.text == '/help_me':
                help_me(message)
            elif message.text == '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
                markup.add(types.KeyboardButton('–ü—Ä–∏—Å–ª–∞—Ç—å –Ω–æ–≤–æ—Å—Ç—å üìù'),
                           types.KeyboardButton('–ü—Ä–∏—Å–ª–∞—Ç—å –º–µ–º ü¶Ñ'))
                bot.send_message(message.chat.id, text="–†–µ—à–∏, —á—Ç–æ —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å :)", reply_markup=markup)
                bot.register_next_step_handler(message, user_actions)
            else:
                add_idea(message.text, username, 'identified')
                markup.add(types.KeyboardButton('–í—Å—ë –∫—Ä—É—Ç–æ, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–¥–µ–∏ –∞–¥–º–∏–Ω—É üíÉ'),
                           types.KeyboardButton('–ù–µ—Ç, –ø–æ–ø—Ä–∞–≤–ª—é –Ω–µ–º–Ω–æ–≥–æ üëÄ'),
                           types.KeyboardButton('–ü–µ—Ä–µ–¥—É–º–∞–ª –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∏–¥–µ–∏ üåö'))
                bot.send_message(message.chat.id, text='{0.first_name}, –µ—â—ë —Ä–∞–∑ –ø—Ä–æ—á–∏—Ç–∞–π –∏ –ø—Ä–æ–≤–µ—Ä—å —Å–≤–æ—é –∏–¥–µ–∏ '
                                                       'üòå'.format(message.from_user))
                bot.send_message(message.chat.id, text=message.text, reply_markup=markup)
                bot.register_next_step_handler(message, finally_send_idea)
        else:
            markup.add(types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
            bot.send_message(message.chat.id,
                             text='{0.first_name}, —Ç—ã —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ –Ω–∞–∂–∏–º–∞–µ—à—åüòå –∏–ª–∏ —à–ª–µ—à—å –Ω–∞–º –∫–∞—Ä—Ç–∏–Ω–∫–∏ –≤–º–µ—Å—Ç–æ —Å–≤–æ–∏—Ö '
                                  '–∏–¥–µ–π üôÉ\n–ù–∞–ø–∏—à–∏ —Å–≤–æ—é –∏–¥–µ–∏ –∏–ª–∏ –≤–µ—Ä–Ω–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é '
                                  ':)'.format(message.from_user), reply_markup=markup)
            bot.register_next_step_handler(message, send_idea)


def send_idea_anonymous(message):
    if message.chat.type == 'private':
        username = message.from_user.username
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        if type(message.text) is str:
            if message.text == '/start':
                start(message)
            elif message.text == '/help_me':
                help_me(message)
            elif message.text == '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
                markup.add(types.KeyboardButton('–ü—Ä–∏—Å–ª–∞—Ç—å –Ω–æ–≤–æ—Å—Ç—å üìù'),
                           types.KeyboardButton('–ü—Ä–∏—Å–ª–∞—Ç—å –º–µ–º ü¶Ñ'))
                bot.send_message(message.chat.id, text="–†–µ—à–∏, —á—Ç–æ —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å :)", reply_markup=markup)
                bot.register_next_step_handler(message, user_actions)
            else:
                add_idea(message.text, username, 'anonymous')
                markup.add(types.KeyboardButton('–í—Å—ë –∫—Ä—É—Ç–æ, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–¥–µ–∏ –∞–¥–º–∏–Ω—É üíÉ'),
                           types.KeyboardButton('–ù–µ—Ç, –ø–æ–ø—Ä–∞–≤–ª—é –Ω–µ–º–Ω–æ–≥–æ üëÄ'),
                           types.KeyboardButton('–ü–µ—Ä–µ–¥—É–º–∞–ª –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∏–¥–µ–∏ üåö'))
                bot.send_message(message.chat.id, text='{0.first_name}, –µ—â—ë —Ä–∞–∑ –ø—Ä–æ—á–∏—Ç–∞–π –∏ –ø—Ä–æ–≤–µ—Ä—å —Å–≤–æ—é –∏–¥–µ–∏ '
                                                       'üòå'.format(message.from_user))
                bot.send_message(message.chat.id, text=message.text, reply_markup=markup)
                bot.register_next_step_handler(message, finally_send_idea)
        else:
            markup.add(types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
            bot.send_message(message.chat.id,
                             text='{0.first_name}, —Ç—ã —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ –Ω–∞–∂–∏–º–∞–µ—à—åüòå –∏–ª–∏ —à–ª–µ—à—å –Ω–∞–º –∫–∞—Ä—Ç–∏–Ω–∫–∏ –≤–º–µ—Å—Ç–æ —Å–≤–æ–∏—Ö '
                                  '–∏–¥–µ–π üôÉ\n–ù–∞–ø–∏—à–∏ —Å–≤–æ—é –∏–¥–µ–∏ –∏–ª–∏ –≤–µ—Ä–Ω–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é '
                                  ':)'.format(message.from_user), reply_markup=markup)
            bot.register_next_step_handler(message, send_idea_anonymous)


def finally_send_idea(message):
    if message.chat.type == 'private':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        if type(message.text) is str:
            if message.text == '/start':
                delete_idea()
                start(message)
            elif message.text == '/help_me':
                delete_idea()
                help_me(message)
            elif message.text == '–í—Å—ë –∫—Ä—É—Ç–æ, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–¥–µ–∏ –∞–¥–º–∏–Ω—É üíÉ':
                bot.send_message(message.chat.id, text='–¢–≤–æ–∏ –∏–¥–µ–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –∞–¥–º–∏–Ω—É :)\n–ï—Å–ª–∏ —É –∞–¥–º–∏–Ω–∞ '
                                                       '–≤–æ–∑–Ω–∏–∫–Ω—É—Ç –≤–æ–ø—Ä–æ—Å—ã - –æ–Ω —Ç–µ–±–µ –Ω–∞–ø–∏—à–µ—Ç :)')
                markup.add(types.KeyboardButton('–ü—Ä–∏—Å–ª–∞—Ç—å –Ω–æ–≤–æ—Å—Ç—å üìù'),
                           types.KeyboardButton('–ü—Ä–∏—Å–ª–∞—Ç—å –º–µ–º ü¶Ñ'))
                bot.send_message(message.chat.id, text="{0.first_name}, —Ä–µ—à–∏, —á—Ç–æ —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å :)"
                                 .format(message.from_user), reply_markup=markup)
                bot.register_next_step_handler(message, user_actions)
            elif message.text == '–ù–µ—Ç, –ø–æ–ø—Ä–∞–≤–ª—é –Ω–µ–º–Ω–æ–≥–æ üëÄ':
                delete_idea()
                markup.add(types.KeyboardButton('–ü—É—Å—Ç—å –≤—Å–µ –∑–Ω–∞—é—Ç –º–æ—ë –∏–º—è! üíÉ'),
                           types.KeyboardButton('–ù–µ—Ç, —è —Å—Ç–µ—Å–Ω—è—à–∫–∞, —Ö–æ—á—É –±—ã—Ç—å –∞–Ω–æ–Ω–∏–º–Ω—ã–º üëÄ'),
                           types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
                bot.send_message(message.chat.id, text='–ù–∞–ø–æ–º–Ω–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Ö–æ—á–µ—à—å –ª–∏ —Ç—ã –æ—Å—Ç–∞—Ç—å—Å—è –∞–Ω–æ–Ω–∏–º–Ω—ã–º –∏–ª–∏ '
                                                       '–ø—É—Å—Ç—å –≤—Å–µ –∑–Ω–∞—é—Ç –∞–≤—Ç–æ—Ä–∞ –∏–¥–µ–∏? üòè', reply_markup=markup)
                bot.register_next_step_handler(message, idea)
            elif message.text == '–ü–µ—Ä–µ–¥—É–º–∞–ª –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∏–¥–µ–∏ üåö':
                delete_idea()
                markup.add(types.KeyboardButton('–ü—Ä–∏—Å–ª–∞—Ç—å –Ω–æ–≤–æ—Å—Ç—å üìù'),
                           types.KeyboardButton('–ü—Ä–∏—Å–ª–∞—Ç—å –º–µ–º ü¶Ñ'))
                bot.send_message(message.chat.id, text="{0.first_name}, —Ä–µ—à–∏, —á—Ç–æ —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å :)"
                                 .format(message.from_user), reply_markup=markup)
                bot.register_next_step_handler(message, user_actions)
            else:
                markup.add(types.KeyboardButton('–í—Å—ë –∫—Ä—É—Ç–æ, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–¥–µ–∏ –∞–¥–º–∏–Ω—É üíÉ'),
                           types.KeyboardButton('–ù–µ—Ç, –ø–æ–ø—Ä–∞–≤–ª—é –Ω–µ–º–Ω–æ–≥–æ üëÄ'),
                           types.KeyboardButton('–ü–µ—Ä–µ–¥—É–º–∞–ª –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∏–¥–µ–∏ üåö'))
                bot.send_message(message.chat.id,
                                 text='{0.first_name}, —Ç—ã —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ –Ω–∞–∂–∏–º–∞–µ—à—åüòå \n–í—ã–±–µ—Ä–∏ –æ–¥–∏–Ω –∏–∑ —ç—Ç–∏—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤, '
                                      '—á—Ç–æ –¥–µ–ª–∞—Ç—å —Å —Ç–≤–æ–∏–º–∏ –∏–¥–µ—è–º–∏ :)'.format(message.from_user), reply_markup=markup)
                bot.register_next_step_handler(message, finally_send_idea)
        else:
            markup.add(types.KeyboardButton('–í—Å—ë –∫—Ä—É—Ç–æ, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–¥–µ–∏ –∞–¥–º–∏–Ω—É üíÉ'),
                       types.KeyboardButton('–ù–µ—Ç, –ø–æ–ø—Ä–∞–≤–ª—é –Ω–µ–º–Ω–æ–≥–æ üëÄ'),
                       types.KeyboardButton('–ü–µ—Ä–µ–¥—É–º–∞–ª –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∏–¥–µ–∏ üåö'))
            bot.send_message(message.chat.id,
                             text='{0.first_name}, —Ç—ã —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ –Ω–∞–∂–∏–º–∞–µ—à—å –∏–ª–∏ —à–ª–µ—à—å –Ω–∞–º –∫–∞—Ä—Ç–∏–Ω–∫–∏ –≤–º–µ—Å—Ç–æ —Ç–µ–∫—Å—Ç–∞ üòå'
                                  '\n–í—ã–±–µ—Ä–∏ –æ–¥–∏–Ω –∏–∑ —ç—Ç–∏—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤, —á—Ç–æ –¥–µ–ª–∞—Ç—å —Å —Ç–≤–æ–∏–º–∏ –∏–¥–µ—è–º–∏ '
                                  ':)'.format(message.from_user), reply_markup=markup)
            bot.register_next_step_handler(message, finally_send_idea)


# if __name__ == "__main__":
#     try:
#         print("Removing webhook...")
#         bot.remove_webhook()
#
#         print("Setting webhook...")
#         success = bot.set_webhook(url=WEBHOOK_URL)
#         print("Webhook set result:", success)
#     except Exception as e:
#         print("Webhook setup error:", e)
#
#     port = int(os.environ.get("PORT", 8080))
#     print(f"Starting Flask on port {port}")
#     app.run(host="0.0.0.0", port=port)


if __name__ == "__main__":
    print('in if __name__ == "__main__"')
    bot.remove_webhook()
    bot.set_webhook(url=WEBHOOK_URL)

    port = int(os.environ.get("PORT", 8080))
    app.run(host="0.0.0.0", port=port)
